{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\n// Add known bot user agents to this list\nconst BOT_USER_AGENTS = [\n    'googlebot',\n    'bingbot',\n    'yahoo! slurp',\n    'duckduckbot',\n    'baiduspider',\n    'yandexbot',\n    'sogou',\n    'exabot',\n    'facebot',\n    'facebookexternalhit',\n    'twitterbot',\n    'linkedinbot',\n    'embedly',\n    'quora link preview',\n    'showyoubot',\n    'outbrain',\n    'pinterest',\n    'slackbot',\n    'vkshare',\n    'w3c_validator',\n    'redditbot',\n    'applebot',\n    'google-read-aloud',\n    'gptbot',\n    'google-extended',\n    'anthropic-ai',\n    'petalbot',\n    'omgilibot',\n    'omgili',\n    'cohere-ai',\n    'bytespider',\n    'ccbot',\n    'adidxbot'\n];\n\n\nexport async function middleware(request: NextRequest) {\n  const userAgent = request.headers.get('user-agent')?.toLowerCase() || '';\n\n  // Check if the user agent is a known bot\n  const isBot = BOT_USER_AGENTS.some(bot => userAgent.includes(bot));\n\n  if (isBot) {\n    // NOTE: Logging bot visits to a database from middleware requires an Edge-compatible\n    // database client or sending a request to a serverless function.\n    // The previous implementation using firebase-admin was causing a runtime error.\n    // For now, we are only detecting the bot without logging.\n    console.log(`Bot detected: ${userAgent}, URL: ${request.nextUrl.pathname}`);\n  }\n\n  // Continue with the request\n  return NextResponse.next();\n}\n\n// See \"Matching Paths\" below to learn more\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\n  ],\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;;AAGA,yCAAyC;AACzC,MAAM,kBAAkB;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAGM,eAAe,WAAW,OAAoB;IACnD,MAAM,YAAY,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe,iBAAiB;IAEtE,yCAAyC;IACzC,MAAM,QAAQ,gBAAgB,IAAI,CAAC,CAAA,MAAO,UAAU,QAAQ,CAAC;IAE7D,IAAI,OAAO;QACT,qFAAqF;QACrF,iEAAiE;QACjE,gFAAgF;QAChF,0DAA0D;QAC1D,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,UAAU,OAAO,EAAE,QAAQ,OAAO,CAAC,QAAQ,EAAE;IAC5E;IAEA,4BAA4B;IAC5B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}