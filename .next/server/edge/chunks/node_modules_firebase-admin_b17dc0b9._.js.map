{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/app"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`fs`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,EAAE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/app"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`os`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,EAAE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/app"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`path`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC","ignoreList":[0]}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils/deep-copy.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepExtend = exports.deepCopy = void 0;\n/**\n * Returns a deep copy of an object or array.\n *\n * @param value - The object or array to deep copy.\n * @returns A deep copy of the provided object or array.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\nexports.deepCopy = deepCopy;\n/**\n * Copies properties from source to target (recursively allows extension of objects and arrays).\n * Scalar values in the target are over-written. If target is undefined, an object of the\n * appropriate type will be created (and returned).\n *\n * We recursively copy all child properties of plain objects in the source - so that namespace-like\n * objects are merged.\n *\n * Note that the target can be a function, in which case the properties in the source object are\n * copied onto it as static properties of the function.\n *\n * @param target - The value which is being extended.\n * @param source - The value whose properties are extending the target.\n * @returns The target value.\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date: {\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            const dateValue = source;\n            return new Date(dateValue.getTime());\n        }\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (const prop in source) {\n        if (!Object.prototype.hasOwnProperty.call(source, prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\nexports.deepExtend = deepExtend;\n"],"names":[],"mappings":"AAAA,2BAA2B,GAC3B;AACA;;;;;;;;;;;;;;;CAeC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG,QAAQ,QAAQ,GAAG,KAAK;AAC7C;;;;;CAKC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,WAAW,WAAW;AACjC;AACA,QAAQ,QAAQ,GAAG;AACnB;;;;;;;;;;;;;;CAcC,GACD,SAAS,WAAW,MAAM,EAAE,MAAM;IAC9B,IAAI,CAAC,CAAC,kBAAkB,MAAM,GAAG;QAC7B,OAAO;IACX;IACA,OAAQ,OAAO,WAAW;QACtB,KAAK;YAAM;gBACP,oEAAoE;gBACpE,kCAAkC;gBAClC,MAAM,YAAY;gBAClB,OAAO,IAAI,KAAK,UAAU,OAAO;YACrC;QACA,KAAK;YACD,IAAI,WAAW,WAAW;gBACtB,SAAS,CAAC;YACd;YACA;QACJ,KAAK;YACD,yDAAyD;YACzD,SAAS,EAAE;YACX;QACJ;YACI,6CAA6C;YAC7C,OAAO;IACf;IACA,IAAK,MAAM,QAAQ,OAAQ;QACvB,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,OAAO;YACrD;QACJ;QACA,MAAM,CAAC,KAAK,GAAG,WAAW,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK;IACxD;IACA,OAAO;AACX;AACA,QAAQ,UAAU,GAAG","ignoreList":[0]}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils/error.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceIdClientErrorCode = exports.InstallationsClientErrorCode = exports.MessagingClientErrorCode = exports.AuthClientErrorCode = exports.AppErrorCodes = exports.FirebaseProjectManagementError = exports.FirebaseMessagingError = exports.FirebaseInstallationsError = exports.FirebaseInstanceIdError = exports.FirebaseFirestoreError = exports.FirebaseDatabaseError = exports.FirebaseAuthError = exports.FirebaseAppError = exports.PrefixedFirebaseError = exports.FirebaseError = void 0;\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n * Firebase error code structure. This extends Error.\n */\nclass FirebaseError extends Error {\n    /**\n     * @param errorInfo - The error information (code and message).\n     * @constructor\n     * @internal\n     */\n    constructor(errorInfo) {\n        super(errorInfo.message);\n        this.errorInfo = errorInfo;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseError.prototype;\n    }\n    /** @returns The error code. */\n    get code() {\n        return this.errorInfo?.code;\n    }\n    /** @returns The error message. */\n    get message() {\n        return this.errorInfo?.message;\n    }\n    /** @returns The object representation of the error. */\n    toJSON() {\n        return {\n            code: this.code,\n            message: this.message,\n        };\n    }\n}\nexports.FirebaseError = FirebaseError;\n/**\n * A FirebaseError with a prefix in front of the error code.\n */\nclass PrefixedFirebaseError extends FirebaseError {\n    /**\n     * @param codePrefix - The prefix to apply to the error code.\n     * @param code - The error code.\n     * @param message - The error message.\n     * @constructor\n     * @internal\n     */\n    constructor(codePrefix, code, message) {\n        super({\n            code: `${codePrefix}/${code}`,\n            message,\n        });\n        this.codePrefix = codePrefix;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = PrefixedFirebaseError.prototype;\n    }\n    /**\n     * Allows the error type to be checked without needing to know implementation details\n     * of the code prefixing.\n     *\n     * @param code - The non-prefixed error code to test against.\n     * @returns True if the code matches, false otherwise.\n     */\n    hasCode(code) {\n        return `${this.codePrefix}/${code}` === this.code;\n    }\n}\nexports.PrefixedFirebaseError = PrefixedFirebaseError;\n/**\n * Firebase App error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseAppError extends PrefixedFirebaseError {\n    /**\n     * @param code - The error code.\n     * @param message - The error message.\n     * @constructor\n     * @internal\n     */\n    constructor(code, message) {\n        super('app', code, message);\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseAppError.prototype;\n    }\n}\nexports.FirebaseAppError = FirebaseAppError;\n/**\n * Firebase Auth error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseAuthError extends PrefixedFirebaseError {\n    /**\n     * Creates the developer-facing error corresponding to the backend error code.\n     *\n     * @param serverErrorCode - The server error code.\n     * @param [message] The error message. The default message is used\n     *     if not provided.\n     * @param [rawServerResponse] The error's raw server response.\n     * @returns The corresponding developer-facing error.\n     * @internal\n     */\n    static fromServerError(serverErrorCode, message, rawServerResponse) {\n        // serverErrorCode could contain additional details:\n        // ERROR_CODE : Detailed message which can also contain colons\n        const colonSeparator = (serverErrorCode || '').indexOf(':');\n        let customMessage = null;\n        if (colonSeparator !== -1) {\n            customMessage = serverErrorCode.substring(colonSeparator + 1).trim();\n            serverErrorCode = serverErrorCode.substring(0, colonSeparator).trim();\n        }\n        // If not found, default to internal error.\n        const clientCodeKey = AUTH_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'INTERNAL_ERROR';\n        const error = (0, deep_copy_1.deepCopy)(AuthClientErrorCode[clientCodeKey]);\n        // Server detailed message should have highest priority.\n        error.message = customMessage || message || error.message;\n        if (clientCodeKey === 'INTERNAL_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseAuthError(error);\n    }\n    /**\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super('auth', info.code, message || info.message);\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseAuthError.prototype;\n    }\n}\nexports.FirebaseAuthError = FirebaseAuthError;\n/**\n * Firebase Database error code structure. This extends FirebaseError.\n */\nclass FirebaseDatabaseError extends FirebaseError {\n    /**\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default\n     *     message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super({ code: 'database/' + info.code, message: message || info.message });\n    }\n}\nexports.FirebaseDatabaseError = FirebaseDatabaseError;\n/**\n * Firebase Firestore error code structure. This extends FirebaseError.\n */\nclass FirebaseFirestoreError extends FirebaseError {\n    /**\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default\n     *     message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super({ code: 'firestore/' + info.code, message: message || info.message });\n    }\n}\nexports.FirebaseFirestoreError = FirebaseFirestoreError;\n/**\n * Firebase instance ID error code structure. This extends FirebaseError.\n */\nclass FirebaseInstanceIdError extends FirebaseError {\n    /**\n     *\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default\n     *     message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super({ code: 'instance-id/' + info.code, message: message || info.message });\n        this.__proto__ = FirebaseInstanceIdError.prototype;\n    }\n}\nexports.FirebaseInstanceIdError = FirebaseInstanceIdError;\n/**\n * Firebase Installations service error code structure. This extends `FirebaseError`.\n */\nclass FirebaseInstallationsError extends FirebaseError {\n    /**\n     *\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default\n     *     message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super({ code: 'installations/' + info.code, message: message || info.message });\n        this.__proto__ = FirebaseInstallationsError.prototype;\n    }\n}\nexports.FirebaseInstallationsError = FirebaseInstallationsError;\n/**\n * Firebase Messaging error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseMessagingError extends PrefixedFirebaseError {\n    /**\n     * Creates the developer-facing error corresponding to the backend error code.\n     *\n     * @param serverErrorCode - The server error code.\n     * @param [message] The error message. The default message is used\n     *     if not provided.\n     * @param [rawServerResponse] The error's raw server response.\n     * @returns The corresponding developer-facing error.\n     * @internal\n     */\n    static fromServerError(serverErrorCode, message, rawServerResponse) {\n        // If not found, default to unknown error.\n        let clientCodeKey = 'UNKNOWN_ERROR';\n        if (serverErrorCode && serverErrorCode in MESSAGING_SERVER_TO_CLIENT_CODE) {\n            clientCodeKey = MESSAGING_SERVER_TO_CLIENT_CODE[serverErrorCode];\n        }\n        const error = (0, deep_copy_1.deepCopy)(MessagingClientErrorCode[clientCodeKey]);\n        error.message = message || error.message;\n        if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseMessagingError(error);\n    }\n    /**\n     * @internal\n     */\n    static fromTopicManagementServerError(serverErrorCode, message, rawServerResponse) {\n        // If not found, default to unknown error.\n        const clientCodeKey = TOPIC_MGT_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'UNKNOWN_ERROR';\n        const error = (0, deep_copy_1.deepCopy)(MessagingClientErrorCode[clientCodeKey]);\n        error.message = message || error.message;\n        if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseMessagingError(error);\n    }\n    /**\n     *\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super('messaging', info.code, message || info.message);\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseMessagingError.prototype;\n    }\n}\nexports.FirebaseMessagingError = FirebaseMessagingError;\n/**\n * Firebase project management error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseProjectManagementError extends PrefixedFirebaseError {\n    /**\n     * @param code - The error code.\n     * @param message - The error message.\n     * @constructor\n     * @internal\n     */\n    constructor(code, message) {\n        super('project-management', code, message);\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseProjectManagementError.prototype;\n    }\n}\nexports.FirebaseProjectManagementError = FirebaseProjectManagementError;\n/**\n * App client error codes and their default messages.\n */\nclass AppErrorCodes {\n}\nexports.AppErrorCodes = AppErrorCodes;\nAppErrorCodes.APP_DELETED = 'app-deleted';\nAppErrorCodes.DUPLICATE_APP = 'duplicate-app';\nAppErrorCodes.INVALID_ARGUMENT = 'invalid-argument';\nAppErrorCodes.INTERNAL_ERROR = 'internal-error';\nAppErrorCodes.INVALID_APP_NAME = 'invalid-app-name';\nAppErrorCodes.INVALID_APP_OPTIONS = 'invalid-app-options';\nAppErrorCodes.INVALID_CREDENTIAL = 'invalid-credential';\nAppErrorCodes.NETWORK_ERROR = 'network-error';\nAppErrorCodes.NETWORK_TIMEOUT = 'network-timeout';\nAppErrorCodes.NO_APP = 'no-app';\nAppErrorCodes.UNABLE_TO_PARSE_RESPONSE = 'unable-to-parse-response';\n/**\n * Auth client error codes and their default messages.\n */\nclass AuthClientErrorCode {\n}\nexports.AuthClientErrorCode = AuthClientErrorCode;\nAuthClientErrorCode.AUTH_BLOCKING_TOKEN_EXPIRED = {\n    code: 'auth-blocking-token-expired',\n    message: 'The provided Firebase Auth Blocking token is expired.',\n};\nAuthClientErrorCode.BILLING_NOT_ENABLED = {\n    code: 'billing-not-enabled',\n    message: 'Feature requires billing to be enabled.',\n};\nAuthClientErrorCode.CLAIMS_TOO_LARGE = {\n    code: 'claims-too-large',\n    message: 'Developer claims maximum payload size exceeded.',\n};\nAuthClientErrorCode.CONFIGURATION_EXISTS = {\n    code: 'configuration-exists',\n    message: 'A configuration already exists with the provided identifier.',\n};\nAuthClientErrorCode.CONFIGURATION_NOT_FOUND = {\n    code: 'configuration-not-found',\n    message: 'There is no configuration corresponding to the provided identifier.',\n};\nAuthClientErrorCode.ID_TOKEN_EXPIRED = {\n    code: 'id-token-expired',\n    message: 'The provided Firebase ID token is expired.',\n};\nAuthClientErrorCode.INVALID_ARGUMENT = {\n    code: 'argument-error',\n    message: 'Invalid argument provided.',\n};\nAuthClientErrorCode.INVALID_CONFIG = {\n    code: 'invalid-config',\n    message: 'The provided configuration is invalid.',\n};\nAuthClientErrorCode.EMAIL_ALREADY_EXISTS = {\n    code: 'email-already-exists',\n    message: 'The email address is already in use by another account.',\n};\nAuthClientErrorCode.EMAIL_NOT_FOUND = {\n    code: 'email-not-found',\n    message: 'There is no user record corresponding to the provided email.',\n};\nAuthClientErrorCode.FORBIDDEN_CLAIM = {\n    code: 'reserved-claim',\n    message: 'The specified developer claim is reserved and cannot be specified.',\n};\nAuthClientErrorCode.INVALID_ID_TOKEN = {\n    code: 'invalid-id-token',\n    message: 'The provided ID token is not a valid Firebase ID token.',\n};\nAuthClientErrorCode.ID_TOKEN_REVOKED = {\n    code: 'id-token-revoked',\n    message: 'The Firebase ID token has been revoked.',\n};\nAuthClientErrorCode.INTERNAL_ERROR = {\n    code: 'internal-error',\n    message: 'An internal error has occurred.',\n};\nAuthClientErrorCode.INVALID_CLAIMS = {\n    code: 'invalid-claims',\n    message: 'The provided custom claim attributes are invalid.',\n};\nAuthClientErrorCode.INVALID_CONTINUE_URI = {\n    code: 'invalid-continue-uri',\n    message: 'The continue URL must be a valid URL string.',\n};\nAuthClientErrorCode.INVALID_CREATION_TIME = {\n    code: 'invalid-creation-time',\n    message: 'The creation time must be a valid UTC date string.',\n};\nAuthClientErrorCode.INVALID_CREDENTIAL = {\n    code: 'invalid-credential',\n    message: 'Invalid credential object provided.',\n};\nAuthClientErrorCode.INVALID_DISABLED_FIELD = {\n    code: 'invalid-disabled-field',\n    message: 'The disabled field must be a boolean.',\n};\nAuthClientErrorCode.INVALID_DISPLAY_NAME = {\n    code: 'invalid-display-name',\n    message: 'The displayName field must be a valid string.',\n};\nAuthClientErrorCode.INVALID_DYNAMIC_LINK_DOMAIN = {\n    code: 'invalid-dynamic-link-domain',\n    message: 'The provided dynamic link domain is not configured or authorized ' +\n        'for the current project.',\n};\nAuthClientErrorCode.INVALID_EMAIL_VERIFIED = {\n    code: 'invalid-email-verified',\n    message: 'The emailVerified field must be a boolean.',\n};\nAuthClientErrorCode.INVALID_EMAIL = {\n    code: 'invalid-email',\n    message: 'The email address is improperly formatted.',\n};\nAuthClientErrorCode.INVALID_NEW_EMAIL = {\n    code: 'invalid-new-email',\n    message: 'The new email address is improperly formatted.',\n};\nAuthClientErrorCode.INVALID_ENROLLED_FACTORS = {\n    code: 'invalid-enrolled-factors',\n    message: 'The enrolled factors must be a valid array of MultiFactorInfo objects.',\n};\nAuthClientErrorCode.INVALID_ENROLLMENT_TIME = {\n    code: 'invalid-enrollment-time',\n    message: 'The second factor enrollment time must be a valid UTC date string.',\n};\nAuthClientErrorCode.INVALID_HASH_ALGORITHM = {\n    code: 'invalid-hash-algorithm',\n    message: 'The hash algorithm must match one of the strings in the list of ' +\n        'supported algorithms.',\n};\nAuthClientErrorCode.INVALID_HASH_BLOCK_SIZE = {\n    code: 'invalid-hash-block-size',\n    message: 'The hash block size must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_DERIVED_KEY_LENGTH = {\n    code: 'invalid-hash-derived-key-length',\n    message: 'The hash derived key length must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_KEY = {\n    code: 'invalid-hash-key',\n    message: 'The hash key must a valid byte buffer.',\n};\nAuthClientErrorCode.INVALID_HASH_MEMORY_COST = {\n    code: 'invalid-hash-memory-cost',\n    message: 'The hash memory cost must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_PARALLELIZATION = {\n    code: 'invalid-hash-parallelization',\n    message: 'The hash parallelization must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_ROUNDS = {\n    code: 'invalid-hash-rounds',\n    message: 'The hash rounds must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_SALT_SEPARATOR = {\n    code: 'invalid-hash-salt-separator',\n    message: 'The hashing algorithm salt separator field must be a valid byte buffer.',\n};\nAuthClientErrorCode.INVALID_LAST_SIGN_IN_TIME = {\n    code: 'invalid-last-sign-in-time',\n    message: 'The last sign-in time must be a valid UTC date string.',\n};\nAuthClientErrorCode.INVALID_NAME = {\n    code: 'invalid-name',\n    message: 'The resource name provided is invalid.',\n};\nAuthClientErrorCode.INVALID_OAUTH_CLIENT_ID = {\n    code: 'invalid-oauth-client-id',\n    message: 'The provided OAuth client ID is invalid.',\n};\nAuthClientErrorCode.INVALID_PAGE_TOKEN = {\n    code: 'invalid-page-token',\n    message: 'The page token must be a valid non-empty string.',\n};\nAuthClientErrorCode.INVALID_PASSWORD = {\n    code: 'invalid-password',\n    message: 'The password must be a string with at least 6 characters.',\n};\nAuthClientErrorCode.INVALID_PASSWORD_HASH = {\n    code: 'invalid-password-hash',\n    message: 'The password hash must be a valid byte buffer.',\n};\nAuthClientErrorCode.INVALID_PASSWORD_SALT = {\n    code: 'invalid-password-salt',\n    message: 'The password salt must be a valid byte buffer.',\n};\nAuthClientErrorCode.INVALID_PHONE_NUMBER = {\n    code: 'invalid-phone-number',\n    message: 'The phone number must be a non-empty E.164 standard compliant identifier ' +\n        'string.',\n};\nAuthClientErrorCode.INVALID_PHOTO_URL = {\n    code: 'invalid-photo-url',\n    message: 'The photoURL field must be a valid URL.',\n};\nAuthClientErrorCode.INVALID_PROJECT_ID = {\n    code: 'invalid-project-id',\n    message: 'Invalid parent project. Either parent project doesn\\'t exist or didn\\'t enable multi-tenancy.',\n};\nAuthClientErrorCode.INVALID_PROVIDER_DATA = {\n    code: 'invalid-provider-data',\n    message: 'The providerData must be a valid array of UserInfo objects.',\n};\nAuthClientErrorCode.INVALID_PROVIDER_ID = {\n    code: 'invalid-provider-id',\n    message: 'The providerId must be a valid supported provider identifier string.',\n};\nAuthClientErrorCode.INVALID_PROVIDER_UID = {\n    code: 'invalid-provider-uid',\n    message: 'The providerUid must be a valid provider uid string.',\n};\nAuthClientErrorCode.INVALID_OAUTH_RESPONSETYPE = {\n    code: 'invalid-oauth-responsetype',\n    message: 'Only exactly one OAuth responseType should be set to true.',\n};\nAuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION = {\n    code: 'invalid-session-cookie-duration',\n    message: 'The session cookie duration must be a valid number in milliseconds ' +\n        'between 5 minutes and 2 weeks.',\n};\nAuthClientErrorCode.INVALID_TENANT_ID = {\n    code: 'invalid-tenant-id',\n    message: 'The tenant ID must be a valid non-empty string.',\n};\nAuthClientErrorCode.INVALID_TENANT_TYPE = {\n    code: 'invalid-tenant-type',\n    message: 'Tenant type must be either \"full_service\" or \"lightweight\".',\n};\nAuthClientErrorCode.INVALID_TESTING_PHONE_NUMBER = {\n    code: 'invalid-testing-phone-number',\n    message: 'Invalid testing phone number or invalid test code provided.',\n};\nAuthClientErrorCode.INVALID_UID = {\n    code: 'invalid-uid',\n    message: 'The uid must be a non-empty string with at most 128 characters.',\n};\nAuthClientErrorCode.INVALID_USER_IMPORT = {\n    code: 'invalid-user-import',\n    message: 'The user record to import is invalid.',\n};\nAuthClientErrorCode.INVALID_TOKENS_VALID_AFTER_TIME = {\n    code: 'invalid-tokens-valid-after-time',\n    message: 'The tokensValidAfterTime must be a valid UTC number in seconds.',\n};\nAuthClientErrorCode.MISMATCHING_TENANT_ID = {\n    code: 'mismatching-tenant-id',\n    message: 'User tenant ID does not match with the current TenantAwareAuth tenant ID.',\n};\nAuthClientErrorCode.MISSING_ANDROID_PACKAGE_NAME = {\n    code: 'missing-android-pkg-name',\n    message: 'An Android Package Name must be provided if the Android App is ' +\n        'required to be installed.',\n};\nAuthClientErrorCode.MISSING_CONFIG = {\n    code: 'missing-config',\n    message: 'The provided configuration is missing required attributes.',\n};\nAuthClientErrorCode.MISSING_CONTINUE_URI = {\n    code: 'missing-continue-uri',\n    message: 'A valid continue URL must be provided in the request.',\n};\nAuthClientErrorCode.MISSING_DISPLAY_NAME = {\n    code: 'missing-display-name',\n    message: 'The resource being created or edited is missing a valid display name.',\n};\nAuthClientErrorCode.MISSING_EMAIL = {\n    code: 'missing-email',\n    message: 'The email is required for the specified action. For example, a multi-factor user ' +\n        'requires a verified email.',\n};\nAuthClientErrorCode.MISSING_IOS_BUNDLE_ID = {\n    code: 'missing-ios-bundle-id',\n    message: 'The request is missing an iOS Bundle ID.',\n};\nAuthClientErrorCode.MISSING_ISSUER = {\n    code: 'missing-issuer',\n    message: 'The OAuth/OIDC configuration issuer must not be empty.',\n};\nAuthClientErrorCode.MISSING_HASH_ALGORITHM = {\n    code: 'missing-hash-algorithm',\n    message: 'Importing users with password hashes requires that the hashing ' +\n        'algorithm and its parameters be provided.',\n};\nAuthClientErrorCode.MISSING_OAUTH_CLIENT_ID = {\n    code: 'missing-oauth-client-id',\n    message: 'The OAuth/OIDC configuration client ID must not be empty.',\n};\nAuthClientErrorCode.MISSING_OAUTH_CLIENT_SECRET = {\n    code: 'missing-oauth-client-secret',\n    message: 'The OAuth configuration client secret is required to enable OIDC code flow.',\n};\nAuthClientErrorCode.MISSING_PROVIDER_ID = {\n    code: 'missing-provider-id',\n    message: 'A valid provider ID must be provided in the request.',\n};\nAuthClientErrorCode.MISSING_SAML_RELYING_PARTY_CONFIG = {\n    code: 'missing-saml-relying-party-config',\n    message: 'The SAML configuration provided is missing a relying party configuration.',\n};\nAuthClientErrorCode.MAXIMUM_TEST_PHONE_NUMBER_EXCEEDED = {\n    code: 'test-phone-number-limit-exceeded',\n    message: 'The maximum allowed number of test phone number / code pairs has been exceeded.',\n};\nAuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED = {\n    code: 'maximum-user-count-exceeded',\n    message: 'The maximum allowed number of users to import has been exceeded.',\n};\nAuthClientErrorCode.MISSING_UID = {\n    code: 'missing-uid',\n    message: 'A uid identifier is required for the current operation.',\n};\nAuthClientErrorCode.OPERATION_NOT_ALLOWED = {\n    code: 'operation-not-allowed',\n    message: 'The given sign-in provider is disabled for this Firebase project. ' +\n        'Enable it in the Firebase console, under the sign-in method tab of the ' +\n        'Auth section.',\n};\nAuthClientErrorCode.PHONE_NUMBER_ALREADY_EXISTS = {\n    code: 'phone-number-already-exists',\n    message: 'The user with the provided phone number already exists.',\n};\nAuthClientErrorCode.PROJECT_NOT_FOUND = {\n    code: 'project-not-found',\n    message: 'No Firebase project was found for the provided credential.',\n};\nAuthClientErrorCode.INSUFFICIENT_PERMISSION = {\n    code: 'insufficient-permission',\n    message: 'Credential implementation provided to initializeApp() via the \"credential\" property ' +\n        'has insufficient permission to access the requested resource. See ' +\n        'https://firebase.google.com/docs/admin/setup for details on how to authenticate this SDK ' +\n        'with appropriate permissions.',\n};\nAuthClientErrorCode.QUOTA_EXCEEDED = {\n    code: 'quota-exceeded',\n    message: 'The project quota for the specified operation has been exceeded.',\n};\nAuthClientErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED = {\n    code: 'second-factor-limit-exceeded',\n    message: 'The maximum number of allowed second factors on a user has been exceeded.',\n};\nAuthClientErrorCode.SECOND_FACTOR_UID_ALREADY_EXISTS = {\n    code: 'second-factor-uid-already-exists',\n    message: 'The specified second factor \"uid\" already exists.',\n};\nAuthClientErrorCode.SESSION_COOKIE_EXPIRED = {\n    code: 'session-cookie-expired',\n    message: 'The Firebase session cookie is expired.',\n};\nAuthClientErrorCode.SESSION_COOKIE_REVOKED = {\n    code: 'session-cookie-revoked',\n    message: 'The Firebase session cookie has been revoked.',\n};\nAuthClientErrorCode.TENANT_NOT_FOUND = {\n    code: 'tenant-not-found',\n    message: 'There is no tenant corresponding to the provided identifier.',\n};\nAuthClientErrorCode.UID_ALREADY_EXISTS = {\n    code: 'uid-already-exists',\n    message: 'The user with the provided uid already exists.',\n};\nAuthClientErrorCode.UNAUTHORIZED_DOMAIN = {\n    code: 'unauthorized-continue-uri',\n    message: 'The domain of the continue URL is not whitelisted. Whitelist the domain in the ' +\n        'Firebase console.',\n};\nAuthClientErrorCode.UNSUPPORTED_FIRST_FACTOR = {\n    code: 'unsupported-first-factor',\n    message: 'A multi-factor user requires a supported first factor.',\n};\nAuthClientErrorCode.UNSUPPORTED_SECOND_FACTOR = {\n    code: 'unsupported-second-factor',\n    message: 'The request specified an unsupported type of second factor.',\n};\nAuthClientErrorCode.UNSUPPORTED_TENANT_OPERATION = {\n    code: 'unsupported-tenant-operation',\n    message: 'This operation is not supported in a multi-tenant context.',\n};\nAuthClientErrorCode.UNVERIFIED_EMAIL = {\n    code: 'unverified-email',\n    message: 'A verified email is required for the specified action. For example, a multi-factor user ' +\n        'requires a verified email.',\n};\nAuthClientErrorCode.USER_NOT_FOUND = {\n    code: 'user-not-found',\n    message: 'There is no user record corresponding to the provided identifier.',\n};\nAuthClientErrorCode.NOT_FOUND = {\n    code: 'not-found',\n    message: 'The requested resource was not found.',\n};\nAuthClientErrorCode.USER_DISABLED = {\n    code: 'user-disabled',\n    message: 'The user record is disabled.',\n};\nAuthClientErrorCode.USER_NOT_DISABLED = {\n    code: 'user-not-disabled',\n    message: 'The user must be disabled in order to bulk delete it (or you must pass force=true).',\n};\nAuthClientErrorCode.INVALID_RECAPTCHA_ACTION = {\n    code: 'invalid-recaptcha-action',\n    message: 'reCAPTCHA action must be \"BLOCK\".'\n};\nAuthClientErrorCode.INVALID_RECAPTCHA_ENFORCEMENT_STATE = {\n    code: 'invalid-recaptcha-enforcement-state',\n    message: 'reCAPTCHA enforcement state must be either \"OFF\", \"AUDIT\" or \"ENFORCE\".'\n};\nAuthClientErrorCode.RECAPTCHA_NOT_ENABLED = {\n    code: 'racaptcha-not-enabled',\n    message: 'reCAPTCHA enterprise is not enabled.'\n};\n/**\n * Messaging client error codes and their default messages.\n */\nclass MessagingClientErrorCode {\n}\nexports.MessagingClientErrorCode = MessagingClientErrorCode;\nMessagingClientErrorCode.INVALID_ARGUMENT = {\n    code: 'invalid-argument',\n    message: 'Invalid argument provided.',\n};\nMessagingClientErrorCode.INVALID_RECIPIENT = {\n    code: 'invalid-recipient',\n    message: 'Invalid message recipient provided.',\n};\nMessagingClientErrorCode.INVALID_PAYLOAD = {\n    code: 'invalid-payload',\n    message: 'Invalid message payload provided.',\n};\nMessagingClientErrorCode.INVALID_DATA_PAYLOAD_KEY = {\n    code: 'invalid-data-payload-key',\n    message: 'The data message payload contains an invalid key. See the reference documentation ' +\n        'for the DataMessagePayload type for restricted keys.',\n};\nMessagingClientErrorCode.PAYLOAD_SIZE_LIMIT_EXCEEDED = {\n    code: 'payload-size-limit-exceeded',\n    message: 'The provided message payload exceeds the FCM size limits. See the error documentation ' +\n        'for more details.',\n};\nMessagingClientErrorCode.INVALID_OPTIONS = {\n    code: 'invalid-options',\n    message: 'Invalid message options provided.',\n};\nMessagingClientErrorCode.INVALID_REGISTRATION_TOKEN = {\n    code: 'invalid-registration-token',\n    message: 'Invalid registration token provided. Make sure it matches the registration token ' +\n        'the client app receives from registering with FCM.',\n};\nMessagingClientErrorCode.REGISTRATION_TOKEN_NOT_REGISTERED = {\n    code: 'registration-token-not-registered',\n    message: 'The provided registration token is not registered. A previously valid registration ' +\n        'token can be unregistered for a variety of reasons. See the error documentation for more ' +\n        'details. Remove this registration token and stop using it to send messages.',\n};\nMessagingClientErrorCode.MISMATCHED_CREDENTIAL = {\n    code: 'mismatched-credential',\n    message: 'The credential used to authenticate this SDK does not have permission to send ' +\n        'messages to the device corresponding to the provided registration token. Make sure the ' +\n        'credential and registration token both belong to the same Firebase project.',\n};\nMessagingClientErrorCode.INVALID_PACKAGE_NAME = {\n    code: 'invalid-package-name',\n    message: 'The message was addressed to a registration token whose package name does not match ' +\n        'the provided \"restrictedPackageName\" option.',\n};\nMessagingClientErrorCode.DEVICE_MESSAGE_RATE_EXCEEDED = {\n    code: 'device-message-rate-exceeded',\n    message: 'The rate of messages to a particular device is too high. Reduce the number of ' +\n        'messages sent to this device and do not immediately retry sending to this device.',\n};\nMessagingClientErrorCode.TOPICS_MESSAGE_RATE_EXCEEDED = {\n    code: 'topics-message-rate-exceeded',\n    message: 'The rate of messages to subscribers to a particular topic is too high. Reduce the ' +\n        'number of messages sent for this topic, and do not immediately retry sending to this topic.',\n};\nMessagingClientErrorCode.MESSAGE_RATE_EXCEEDED = {\n    code: 'message-rate-exceeded',\n    message: 'Sending limit exceeded for the message target.',\n};\nMessagingClientErrorCode.THIRD_PARTY_AUTH_ERROR = {\n    code: 'third-party-auth-error',\n    message: 'A message targeted to an iOS device could not be sent because the required APNs ' +\n        'SSL certificate was not uploaded or has expired. Check the validity of your development ' +\n        'and production certificates.',\n};\nMessagingClientErrorCode.TOO_MANY_TOPICS = {\n    code: 'too-many-topics',\n    message: 'The maximum number of topics the provided registration token can be subscribed to ' +\n        'has been exceeded.',\n};\nMessagingClientErrorCode.AUTHENTICATION_ERROR = {\n    code: 'authentication-error',\n    message: 'An error occurred when trying to authenticate to the FCM servers. Make sure the ' +\n        'credential used to authenticate this SDK has the proper permissions. See ' +\n        'https://firebase.google.com/docs/admin/setup for setup instructions.',\n};\nMessagingClientErrorCode.SERVER_UNAVAILABLE = {\n    code: 'server-unavailable',\n    message: 'The FCM server could not process the request in time. See the error documentation ' +\n        'for more details.',\n};\nMessagingClientErrorCode.INTERNAL_ERROR = {\n    code: 'internal-error',\n    message: 'An internal error has occurred. Please retry the request.',\n};\nMessagingClientErrorCode.UNKNOWN_ERROR = {\n    code: 'unknown-error',\n    message: 'An unknown server error was returned.',\n};\nclass InstallationsClientErrorCode {\n}\nexports.InstallationsClientErrorCode = InstallationsClientErrorCode;\nInstallationsClientErrorCode.INVALID_ARGUMENT = {\n    code: 'invalid-argument',\n    message: 'Invalid argument provided.',\n};\nInstallationsClientErrorCode.INVALID_PROJECT_ID = {\n    code: 'invalid-project-id',\n    message: 'Invalid project ID provided.',\n};\nInstallationsClientErrorCode.INVALID_INSTALLATION_ID = {\n    code: 'invalid-installation-id',\n    message: 'Invalid installation ID provided.',\n};\nInstallationsClientErrorCode.API_ERROR = {\n    code: 'api-error',\n    message: 'Installation ID API call failed.',\n};\nclass InstanceIdClientErrorCode extends InstallationsClientErrorCode {\n}\nexports.InstanceIdClientErrorCode = InstanceIdClientErrorCode;\nInstanceIdClientErrorCode.INVALID_INSTANCE_ID = {\n    code: 'invalid-instance-id',\n    message: 'Invalid instance ID provided.',\n};\n/** @const {ServerToClientCode} Auth server to client enum error codes. */\nconst AUTH_SERVER_TO_CLIENT_CODE = {\n    // Feature being configured or used requires a billing account.\n    BILLING_NOT_ENABLED: 'BILLING_NOT_ENABLED',\n    // Claims payload is too large.\n    CLAIMS_TOO_LARGE: 'CLAIMS_TOO_LARGE',\n    // Configuration being added already exists.\n    CONFIGURATION_EXISTS: 'CONFIGURATION_EXISTS',\n    // Configuration not found.\n    CONFIGURATION_NOT_FOUND: 'CONFIGURATION_NOT_FOUND',\n    // Provided credential has insufficient permissions.\n    INSUFFICIENT_PERMISSION: 'INSUFFICIENT_PERMISSION',\n    // Provided configuration has invalid fields.\n    INVALID_CONFIG: 'INVALID_CONFIG',\n    // Provided configuration identifier is invalid.\n    INVALID_CONFIG_ID: 'INVALID_PROVIDER_ID',\n    // ActionCodeSettings missing continue URL.\n    INVALID_CONTINUE_URI: 'INVALID_CONTINUE_URI',\n    // Dynamic link domain in provided ActionCodeSettings is not authorized.\n    INVALID_DYNAMIC_LINK_DOMAIN: 'INVALID_DYNAMIC_LINK_DOMAIN',\n    // uploadAccount provides an email that already exists.\n    DUPLICATE_EMAIL: 'EMAIL_ALREADY_EXISTS',\n    // uploadAccount provides a localId that already exists.\n    DUPLICATE_LOCAL_ID: 'UID_ALREADY_EXISTS',\n    // Request specified a multi-factor enrollment ID that already exists.\n    DUPLICATE_MFA_ENROLLMENT_ID: 'SECOND_FACTOR_UID_ALREADY_EXISTS',\n    // setAccountInfo email already exists.\n    EMAIL_EXISTS: 'EMAIL_ALREADY_EXISTS',\n    // /accounts:sendOobCode for password reset when user is not found.\n    EMAIL_NOT_FOUND: 'EMAIL_NOT_FOUND',\n    // Reserved claim name.\n    FORBIDDEN_CLAIM: 'FORBIDDEN_CLAIM',\n    // Invalid claims provided.\n    INVALID_CLAIMS: 'INVALID_CLAIMS',\n    // Invalid session cookie duration.\n    INVALID_DURATION: 'INVALID_SESSION_COOKIE_DURATION',\n    // Invalid email provided.\n    INVALID_EMAIL: 'INVALID_EMAIL',\n    // Invalid new email provided.\n    INVALID_NEW_EMAIL: 'INVALID_NEW_EMAIL',\n    // Invalid tenant display name. This can be thrown on CreateTenant and UpdateTenant.\n    INVALID_DISPLAY_NAME: 'INVALID_DISPLAY_NAME',\n    // Invalid ID token provided.\n    INVALID_ID_TOKEN: 'INVALID_ID_TOKEN',\n    // Invalid tenant/parent resource name.\n    INVALID_NAME: 'INVALID_NAME',\n    // OIDC configuration has an invalid OAuth client ID.\n    INVALID_OAUTH_CLIENT_ID: 'INVALID_OAUTH_CLIENT_ID',\n    // Invalid page token.\n    INVALID_PAGE_SELECTION: 'INVALID_PAGE_TOKEN',\n    // Invalid phone number.\n    INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',\n    // Invalid agent project. Either agent project doesn't exist or didn't enable multi-tenancy.\n    INVALID_PROJECT_ID: 'INVALID_PROJECT_ID',\n    // Invalid provider ID.\n    INVALID_PROVIDER_ID: 'INVALID_PROVIDER_ID',\n    // Invalid service account.\n    INVALID_SERVICE_ACCOUNT: 'INVALID_SERVICE_ACCOUNT',\n    // Invalid testing phone number.\n    INVALID_TESTING_PHONE_NUMBER: 'INVALID_TESTING_PHONE_NUMBER',\n    // Invalid tenant type.\n    INVALID_TENANT_TYPE: 'INVALID_TENANT_TYPE',\n    // Missing Android package name.\n    MISSING_ANDROID_PACKAGE_NAME: 'MISSING_ANDROID_PACKAGE_NAME',\n    // Missing configuration.\n    MISSING_CONFIG: 'MISSING_CONFIG',\n    // Missing configuration identifier.\n    MISSING_CONFIG_ID: 'MISSING_PROVIDER_ID',\n    // Missing tenant display name: This can be thrown on CreateTenant and UpdateTenant.\n    MISSING_DISPLAY_NAME: 'MISSING_DISPLAY_NAME',\n    // Email is required for the specified action. For example a multi-factor user requires\n    // a verified email.\n    MISSING_EMAIL: 'MISSING_EMAIL',\n    // Missing iOS bundle ID.\n    MISSING_IOS_BUNDLE_ID: 'MISSING_IOS_BUNDLE_ID',\n    // Missing OIDC issuer.\n    MISSING_ISSUER: 'MISSING_ISSUER',\n    // No localId provided (deleteAccount missing localId).\n    MISSING_LOCAL_ID: 'MISSING_UID',\n    // OIDC configuration is missing an OAuth client ID.\n    MISSING_OAUTH_CLIENT_ID: 'MISSING_OAUTH_CLIENT_ID',\n    // Missing provider ID.\n    MISSING_PROVIDER_ID: 'MISSING_PROVIDER_ID',\n    // Missing SAML RP config.\n    MISSING_SAML_RELYING_PARTY_CONFIG: 'MISSING_SAML_RELYING_PARTY_CONFIG',\n    // Empty user list in uploadAccount.\n    MISSING_USER_ACCOUNT: 'MISSING_UID',\n    // Password auth disabled in console.\n    OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',\n    // Provided credential has insufficient permissions.\n    PERMISSION_DENIED: 'INSUFFICIENT_PERMISSION',\n    // Phone number already exists.\n    PHONE_NUMBER_EXISTS: 'PHONE_NUMBER_ALREADY_EXISTS',\n    // Project not found.\n    PROJECT_NOT_FOUND: 'PROJECT_NOT_FOUND',\n    // In multi-tenancy context: project creation quota exceeded.\n    QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',\n    // Currently only 5 second factors can be set on the same user.\n    SECOND_FACTOR_LIMIT_EXCEEDED: 'SECOND_FACTOR_LIMIT_EXCEEDED',\n    // Tenant not found.\n    TENANT_NOT_FOUND: 'TENANT_NOT_FOUND',\n    // Tenant ID mismatch.\n    TENANT_ID_MISMATCH: 'MISMATCHING_TENANT_ID',\n    // Token expired error.\n    TOKEN_EXPIRED: 'ID_TOKEN_EXPIRED',\n    // Continue URL provided in ActionCodeSettings has a domain that is not whitelisted.\n    UNAUTHORIZED_DOMAIN: 'UNAUTHORIZED_DOMAIN',\n    // A multi-factor user requires a supported first factor.\n    UNSUPPORTED_FIRST_FACTOR: 'UNSUPPORTED_FIRST_FACTOR',\n    // The request specified an unsupported type of second factor.\n    UNSUPPORTED_SECOND_FACTOR: 'UNSUPPORTED_SECOND_FACTOR',\n    // Operation is not supported in a multi-tenant context.\n    UNSUPPORTED_TENANT_OPERATION: 'UNSUPPORTED_TENANT_OPERATION',\n    // A verified email is required for the specified action. For example a multi-factor user\n    // requires a verified email.\n    UNVERIFIED_EMAIL: 'UNVERIFIED_EMAIL',\n    // User on which action is to be performed is not found.\n    USER_NOT_FOUND: 'USER_NOT_FOUND',\n    // User record is disabled.\n    USER_DISABLED: 'USER_DISABLED',\n    // Password provided is too weak.\n    WEAK_PASSWORD: 'INVALID_PASSWORD',\n    // Unrecognized reCAPTCHA action.\n    INVALID_RECAPTCHA_ACTION: 'INVALID_RECAPTCHA_ACTION',\n    // Unrecognized reCAPTCHA enforcement state.\n    INVALID_RECAPTCHA_ENFORCEMENT_STATE: 'INVALID_RECAPTCHA_ENFORCEMENT_STATE',\n    // reCAPTCHA is not enabled for account defender.\n    RECAPTCHA_NOT_ENABLED: 'RECAPTCHA_NOT_ENABLED'\n};\n/** @const {ServerToClientCode} Messaging server to client enum error codes. */\nconst MESSAGING_SERVER_TO_CLIENT_CODE = {\n    /* GENERIC ERRORS */\n    // Generic invalid message parameter provided.\n    InvalidParameters: 'INVALID_ARGUMENT',\n    // Mismatched sender ID.\n    MismatchSenderId: 'MISMATCHED_CREDENTIAL',\n    // FCM server unavailable.\n    Unavailable: 'SERVER_UNAVAILABLE',\n    // FCM server internal error.\n    InternalServerError: 'INTERNAL_ERROR',\n    /* SEND ERRORS */\n    // Invalid registration token format.\n    InvalidRegistration: 'INVALID_REGISTRATION_TOKEN',\n    // Registration token is not registered.\n    NotRegistered: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    // Registration token does not match restricted package name.\n    InvalidPackageName: 'INVALID_PACKAGE_NAME',\n    // Message payload size limit exceeded.\n    MessageTooBig: 'PAYLOAD_SIZE_LIMIT_EXCEEDED',\n    // Invalid key in the data message payload.\n    InvalidDataKey: 'INVALID_DATA_PAYLOAD_KEY',\n    // Invalid time to live option.\n    InvalidTtl: 'INVALID_OPTIONS',\n    // Device message rate exceeded.\n    DeviceMessageRateExceeded: 'DEVICE_MESSAGE_RATE_EXCEEDED',\n    // Topics message rate exceeded.\n    TopicsMessageRateExceeded: 'TOPICS_MESSAGE_RATE_EXCEEDED',\n    // Invalid APNs credentials.\n    InvalidApnsCredential: 'THIRD_PARTY_AUTH_ERROR',\n    /* FCM v1 canonical error codes */\n    NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    PERMISSION_DENIED: 'MISMATCHED_CREDENTIAL',\n    RESOURCE_EXHAUSTED: 'MESSAGE_RATE_EXCEEDED',\n    UNAUTHENTICATED: 'THIRD_PARTY_AUTH_ERROR',\n    /* FCM v1 new error codes */\n    APNS_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n    INTERNAL: 'INTERNAL_ERROR',\n    INVALID_ARGUMENT: 'INVALID_ARGUMENT',\n    QUOTA_EXCEEDED: 'MESSAGE_RATE_EXCEEDED',\n    SENDER_ID_MISMATCH: 'MISMATCHED_CREDENTIAL',\n    THIRD_PARTY_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n    UNAVAILABLE: 'SERVER_UNAVAILABLE',\n    UNREGISTERED: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    UNSPECIFIED_ERROR: 'UNKNOWN_ERROR',\n};\n/** @const {ServerToClientCode} Topic management (IID) server to client enum error codes. */\nconst TOPIC_MGT_SERVER_TO_CLIENT_CODE = {\n    /* TOPIC SUBSCRIPTION MANAGEMENT ERRORS */\n    NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    INVALID_ARGUMENT: 'INVALID_REGISTRATION_TOKEN',\n    TOO_MANY_TOPICS: 'TOO_MANY_TOPICS',\n    RESOURCE_EXHAUSTED: 'TOO_MANY_TOPICS',\n    PERMISSION_DENIED: 'AUTHENTICATION_ERROR',\n    DEADLINE_EXCEEDED: 'SERVER_UNAVAILABLE',\n    INTERNAL: 'INTERNAL_ERROR',\n    UNKNOWN: 'UNKNOWN_ERROR',\n};\n"],"names":[],"mappings":"AAAA,2BAA2B,GAC3B;AACA;;;;;;;;;;;;;;;CAeC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,yBAAyB,GAAG,QAAQ,4BAA4B,GAAG,QAAQ,wBAAwB,GAAG,QAAQ,mBAAmB,GAAG,QAAQ,aAAa,GAAG,QAAQ,8BAA8B,GAAG,QAAQ,sBAAsB,GAAG,QAAQ,0BAA0B,GAAG,QAAQ,uBAAuB,GAAG,QAAQ,sBAAsB,GAAG,QAAQ,qBAAqB,GAAG,QAAQ,iBAAiB,GAAG,QAAQ,gBAAgB,GAAG,QAAQ,qBAAqB,GAAG,QAAQ,aAAa,GAAG,KAAK;AAC1e,MAAM;AACN;;CAEC,GACD,MAAM,sBAAsB;IACxB;;;;KAIC,GACD,YAAY,SAAS,CAAE;QACnB,KAAK,CAAC,UAAU,OAAO;QACvB,IAAI,CAAC,SAAS,GAAG;QACjB,kCAAkC,GAClC,yEAAyE;QACzE,gIAAgI;QAChI,iCAAiC,GACjC,IAAI,CAAC,SAAS,GAAG,cAAc,SAAS;IAC5C;IACA,6BAA6B,GAC7B,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,SAAS,EAAE;IAC3B;IACA,gCAAgC,GAChC,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,SAAS,EAAE;IAC3B;IACA,qDAAqD,GACrD,SAAS;QACL,OAAO;YACH,MAAM,IAAI,CAAC,IAAI;YACf,SAAS,IAAI,CAAC,OAAO;QACzB;IACJ;AACJ;AACA,QAAQ,aAAa,GAAG;AACxB;;CAEC,GACD,MAAM,8BAA8B;IAChC;;;;;;KAMC,GACD,YAAY,UAAU,EAAE,IAAI,EAAE,OAAO,CAAE;QACnC,KAAK,CAAC;YACF,MAAM,GAAG,WAAW,CAAC,EAAE,MAAM;YAC7B;QACJ;QACA,IAAI,CAAC,UAAU,GAAG;QAClB,kCAAkC,GAClC,yEAAyE;QACzE,gIAAgI;QAChI,iCAAiC,GACjC,IAAI,CAAC,SAAS,GAAG,sBAAsB,SAAS;IACpD;IACA;;;;;;KAMC,GACD,QAAQ,IAAI,EAAE;QACV,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,KAAK,IAAI,CAAC,IAAI;IACrD;AACJ;AACA,QAAQ,qBAAqB,GAAG;AAChC;;CAEC,GACD,MAAM,yBAAyB;IAC3B;;;;;KAKC,GACD,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,KAAK,CAAC,OAAO,MAAM;QACnB,kCAAkC,GAClC,yEAAyE;QACzE,gIAAgI;QAChI,iCAAiC,GACjC,IAAI,CAAC,SAAS,GAAG,iBAAiB,SAAS;IAC/C;AACJ;AACA,QAAQ,gBAAgB,GAAG;AAC3B;;CAEC,GACD,MAAM,0BAA0B;IAC5B;;;;;;;;;KASC,GACD,OAAO,gBAAgB,eAAe,EAAE,OAAO,EAAE,iBAAiB,EAAE;QAChE,oDAAoD;QACpD,8DAA8D;QAC9D,MAAM,iBAAiB,CAAC,mBAAmB,EAAE,EAAE,OAAO,CAAC;QACvD,IAAI,gBAAgB;QACpB,IAAI,mBAAmB,CAAC,GAAG;YACvB,gBAAgB,gBAAgB,SAAS,CAAC,iBAAiB,GAAG,IAAI;YAClE,kBAAkB,gBAAgB,SAAS,CAAC,GAAG,gBAAgB,IAAI;QACvE;QACA,2CAA2C;QAC3C,MAAM,gBAAgB,0BAA0B,CAAC,gBAAgB,IAAI;QACrE,MAAM,QAAQ,CAAC,GAAG,YAAY,QAAQ,EAAE,mBAAmB,CAAC,cAAc;QAC1E,wDAAwD;QACxD,MAAM,OAAO,GAAG,iBAAiB,WAAW,MAAM,OAAO;QACzD,IAAI,kBAAkB,oBAAoB,OAAO,sBAAsB,aAAa;YAChF,IAAI;gBACA,MAAM,OAAO,IAAI,CAAC,uBAAuB,EAAE,KAAK,SAAS,CAAC,mBAAmB,CAAC,CAAC;YACnF,EACA,OAAO,GAAG;YACN,6BAA6B;YACjC;QACJ;QACA,OAAO,IAAI,kBAAkB;IACjC;IACA;;;;;KAKC,GACD,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,uDAAuD;QACvD,KAAK,CAAC,QAAQ,KAAK,IAAI,EAAE,WAAW,KAAK,OAAO;QAChD,kCAAkC,GAClC,yEAAyE;QACzE,gIAAgI;QAChI,iCAAiC,GACjC,IAAI,CAAC,SAAS,GAAG,kBAAkB,SAAS;IAChD;AACJ;AACA,QAAQ,iBAAiB,GAAG;AAC5B;;CAEC,GACD,MAAM,8BAA8B;IAChC;;;;;;KAMC,GACD,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,uDAAuD;QACvD,KAAK,CAAC;YAAE,MAAM,cAAc,KAAK,IAAI;YAAE,SAAS,WAAW,KAAK,OAAO;QAAC;IAC5E;AACJ;AACA,QAAQ,qBAAqB,GAAG;AAChC;;CAEC,GACD,MAAM,+BAA+B;IACjC;;;;;;KAMC,GACD,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,uDAAuD;QACvD,KAAK,CAAC;YAAE,MAAM,eAAe,KAAK,IAAI;YAAE,SAAS,WAAW,KAAK,OAAO;QAAC;IAC7E;AACJ;AACA,QAAQ,sBAAsB,GAAG;AACjC;;CAEC,GACD,MAAM,gCAAgC;IAClC;;;;;;;KAOC,GACD,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,uDAAuD;QACvD,KAAK,CAAC;YAAE,MAAM,iBAAiB,KAAK,IAAI;YAAE,SAAS,WAAW,KAAK,OAAO;QAAC;QAC3E,IAAI,CAAC,SAAS,GAAG,wBAAwB,SAAS;IACtD;AACJ;AACA,QAAQ,uBAAuB,GAAG;AAClC;;CAEC,GACD,MAAM,mCAAmC;IACrC;;;;;;;KAOC,GACD,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,uDAAuD;QACvD,KAAK,CAAC;YAAE,MAAM,mBAAmB,KAAK,IAAI;YAAE,SAAS,WAAW,KAAK,OAAO;QAAC;QAC7E,IAAI,CAAC,SAAS,GAAG,2BAA2B,SAAS;IACzD;AACJ;AACA,QAAQ,0BAA0B,GAAG;AACrC;;CAEC,GACD,MAAM,+BAA+B;IACjC;;;;;;;;;KASC,GACD,OAAO,gBAAgB,eAAe,EAAE,OAAO,EAAE,iBAAiB,EAAE;QAChE,0CAA0C;QAC1C,IAAI,gBAAgB;QACpB,IAAI,mBAAmB,mBAAmB,iCAAiC;YACvE,gBAAgB,+BAA+B,CAAC,gBAAgB;QACpE;QACA,MAAM,QAAQ,CAAC,GAAG,YAAY,QAAQ,EAAE,wBAAwB,CAAC,cAAc;QAC/E,MAAM,OAAO,GAAG,WAAW,MAAM,OAAO;QACxC,IAAI,kBAAkB,mBAAmB,OAAO,sBAAsB,aAAa;YAC/E,IAAI;gBACA,MAAM,OAAO,IAAI,CAAC,uBAAuB,EAAE,KAAK,SAAS,CAAC,mBAAmB,CAAC,CAAC;YACnF,EACA,OAAO,GAAG;YACN,6BAA6B;YACjC;QACJ;QACA,OAAO,IAAI,uBAAuB;IACtC;IACA;;KAEC,GACD,OAAO,+BAA+B,eAAe,EAAE,OAAO,EAAE,iBAAiB,EAAE;QAC/E,0CAA0C;QAC1C,MAAM,gBAAgB,+BAA+B,CAAC,gBAAgB,IAAI;QAC1E,MAAM,QAAQ,CAAC,GAAG,YAAY,QAAQ,EAAE,wBAAwB,CAAC,cAAc;QAC/E,MAAM,OAAO,GAAG,WAAW,MAAM,OAAO;QACxC,IAAI,kBAAkB,mBAAmB,OAAO,sBAAsB,aAAa;YAC/E,IAAI;gBACA,MAAM,OAAO,IAAI,CAAC,uBAAuB,EAAE,KAAK,SAAS,CAAC,mBAAmB,CAAC,CAAC;YACnF,EACA,OAAO,GAAG;YACN,6BAA6B;YACjC;QACJ;QACA,OAAO,IAAI,uBAAuB;IACtC;IACA;;;;;;KAMC,GACD,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,uDAAuD;QACvD,KAAK,CAAC,aAAa,KAAK,IAAI,EAAE,WAAW,KAAK,OAAO;QACrD,kCAAkC,GAClC,yEAAyE;QACzE,gIAAgI;QAChI,iCAAiC,GACjC,IAAI,CAAC,SAAS,GAAG,uBAAuB,SAAS;IACrD;AACJ;AACA,QAAQ,sBAAsB,GAAG;AACjC;;CAEC,GACD,MAAM,uCAAuC;IACzC;;;;;KAKC,GACD,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,KAAK,CAAC,sBAAsB,MAAM;QAClC,kCAAkC,GAClC,yEAAyE;QACzE,gIAAgI;QAChI,iCAAiC,GACjC,IAAI,CAAC,SAAS,GAAG,+BAA+B,SAAS;IAC7D;AACJ;AACA,QAAQ,8BAA8B,GAAG;AACzC;;CAEC,GACD,MAAM;AACN;AACA,QAAQ,aAAa,GAAG;AACxB,cAAc,WAAW,GAAG;AAC5B,cAAc,aAAa,GAAG;AAC9B,cAAc,gBAAgB,GAAG;AACjC,cAAc,cAAc,GAAG;AAC/B,cAAc,gBAAgB,GAAG;AACjC,cAAc,mBAAmB,GAAG;AACpC,cAAc,kBAAkB,GAAG;AACnC,cAAc,aAAa,GAAG;AAC9B,cAAc,eAAe,GAAG;AAChC,cAAc,MAAM,GAAG;AACvB,cAAc,wBAAwB,GAAG;AACzC;;CAEC,GACD,MAAM;AACN;AACA,QAAQ,mBAAmB,GAAG;AAC9B,oBAAoB,2BAA2B,GAAG;IAC9C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,mBAAmB,GAAG;IACtC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,oBAAoB,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,uBAAuB,GAAG;IAC1C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,cAAc,GAAG;IACjC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,oBAAoB,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,eAAe,GAAG;IAClC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,eAAe,GAAG;IAClC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,cAAc,GAAG;IACjC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,cAAc,GAAG;IACjC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,oBAAoB,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,qBAAqB,GAAG;IACxC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,kBAAkB,GAAG;IACrC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,sBAAsB,GAAG;IACzC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,oBAAoB,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,2BAA2B,GAAG;IAC9C,MAAM;IACN,SAAS,sEACL;AACR;AACA,oBAAoB,sBAAsB,GAAG;IACzC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,aAAa,GAAG;IAChC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,iBAAiB,GAAG;IACpC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,wBAAwB,GAAG;IAC3C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,uBAAuB,GAAG;IAC1C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,sBAAsB,GAAG;IACzC,MAAM;IACN,SAAS,qEACL;AACR;AACA,oBAAoB,uBAAuB,GAAG;IAC1C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,+BAA+B,GAAG;IAClD,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,wBAAwB,GAAG;IAC3C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,4BAA4B,GAAG;IAC/C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,mBAAmB,GAAG;IACtC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,2BAA2B,GAAG;IAC9C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,yBAAyB,GAAG;IAC5C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,YAAY,GAAG;IAC/B,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,uBAAuB,GAAG;IAC1C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,kBAAkB,GAAG;IACrC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,qBAAqB,GAAG;IACxC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,qBAAqB,GAAG;IACxC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,oBAAoB,GAAG;IACvC,MAAM;IACN,SAAS,8EACL;AACR;AACA,oBAAoB,iBAAiB,GAAG;IACpC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,kBAAkB,GAAG;IACrC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,qBAAqB,GAAG;IACxC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,mBAAmB,GAAG;IACtC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,oBAAoB,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,0BAA0B,GAAG;IAC7C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,+BAA+B,GAAG;IAClD,MAAM;IACN,SAAS,wEACL;AACR;AACA,oBAAoB,iBAAiB,GAAG;IACpC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,mBAAmB,GAAG;IACtC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,4BAA4B,GAAG;IAC/C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,WAAW,GAAG;IAC9B,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,mBAAmB,GAAG;IACtC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,+BAA+B,GAAG;IAClD,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,qBAAqB,GAAG;IACxC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,4BAA4B,GAAG;IAC/C,MAAM;IACN,SAAS,oEACL;AACR;AACA,oBAAoB,cAAc,GAAG;IACjC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,oBAAoB,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,oBAAoB,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,aAAa,GAAG;IAChC,MAAM;IACN,SAAS,sFACL;AACR;AACA,oBAAoB,qBAAqB,GAAG;IACxC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,cAAc,GAAG;IACjC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,sBAAsB,GAAG;IACzC,MAAM;IACN,SAAS,oEACL;AACR;AACA,oBAAoB,uBAAuB,GAAG;IAC1C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,2BAA2B,GAAG;IAC9C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,mBAAmB,GAAG;IACtC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,iCAAiC,GAAG;IACpD,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,kCAAkC,GAAG;IACrD,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,2BAA2B,GAAG;IAC9C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,WAAW,GAAG;IAC9B,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,qBAAqB,GAAG;IACxC,MAAM;IACN,SAAS,uEACL,4EACA;AACR;AACA,oBAAoB,2BAA2B,GAAG;IAC9C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,iBAAiB,GAAG;IACpC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,uBAAuB,GAAG;IAC1C,MAAM;IACN,SAAS,yFACL,uEACA,8FACA;AACR;AACA,oBAAoB,cAAc,GAAG;IACjC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,4BAA4B,GAAG;IAC/C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gCAAgC,GAAG;IACnD,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,sBAAsB,GAAG;IACzC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,sBAAsB,GAAG;IACzC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,kBAAkB,GAAG;IACrC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,mBAAmB,GAAG;IACtC,MAAM;IACN,SAAS,oFACL;AACR;AACA,oBAAoB,wBAAwB,GAAG;IAC3C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,yBAAyB,GAAG;IAC5C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,4BAA4B,GAAG;IAC/C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,gBAAgB,GAAG;IACnC,MAAM;IACN,SAAS,6FACL;AACR;AACA,oBAAoB,cAAc,GAAG;IACjC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,SAAS,GAAG;IAC5B,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,aAAa,GAAG;IAChC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,iBAAiB,GAAG;IACpC,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,wBAAwB,GAAG;IAC3C,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,mCAAmC,GAAG;IACtD,MAAM;IACN,SAAS;AACb;AACA,oBAAoB,qBAAqB,GAAG;IACxC,MAAM;IACN,SAAS;AACb;AACA;;CAEC,GACD,MAAM;AACN;AACA,QAAQ,wBAAwB,GAAG;AACnC,yBAAyB,gBAAgB,GAAG;IACxC,MAAM;IACN,SAAS;AACb;AACA,yBAAyB,iBAAiB,GAAG;IACzC,MAAM;IACN,SAAS;AACb;AACA,yBAAyB,eAAe,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,yBAAyB,wBAAwB,GAAG;IAChD,MAAM;IACN,SAAS,uFACL;AACR;AACA,yBAAyB,2BAA2B,GAAG;IACnD,MAAM;IACN,SAAS,2FACL;AACR;AACA,yBAAyB,eAAe,GAAG;IACvC,MAAM;IACN,SAAS;AACb;AACA,yBAAyB,0BAA0B,GAAG;IAClD,MAAM;IACN,SAAS,sFACL;AACR;AACA,yBAAyB,iCAAiC,GAAG;IACzD,MAAM;IACN,SAAS,wFACL,8FACA;AACR;AACA,yBAAyB,qBAAqB,GAAG;IAC7C,MAAM;IACN,SAAS,mFACL,4FACA;AACR;AACA,yBAAyB,oBAAoB,GAAG;IAC5C,MAAM;IACN,SAAS,yFACL;AACR;AACA,yBAAyB,4BAA4B,GAAG;IACpD,MAAM;IACN,SAAS,mFACL;AACR;AACA,yBAAyB,4BAA4B,GAAG;IACpD,MAAM;IACN,SAAS,uFACL;AACR;AACA,yBAAyB,qBAAqB,GAAG;IAC7C,MAAM;IACN,SAAS;AACb;AACA,yBAAyB,sBAAsB,GAAG;IAC9C,MAAM;IACN,SAAS,qFACL,6FACA;AACR;AACA,yBAAyB,eAAe,GAAG;IACvC,MAAM;IACN,SAAS,uFACL;AACR;AACA,yBAAyB,oBAAoB,GAAG;IAC5C,MAAM;IACN,SAAS,qFACL,8EACA;AACR;AACA,yBAAyB,kBAAkB,GAAG;IAC1C,MAAM;IACN,SAAS,uFACL;AACR;AACA,yBAAyB,cAAc,GAAG;IACtC,MAAM;IACN,SAAS;AACb;AACA,yBAAyB,aAAa,GAAG;IACrC,MAAM;IACN,SAAS;AACb;AACA,MAAM;AACN;AACA,QAAQ,4BAA4B,GAAG;AACvC,6BAA6B,gBAAgB,GAAG;IAC5C,MAAM;IACN,SAAS;AACb;AACA,6BAA6B,kBAAkB,GAAG;IAC9C,MAAM;IACN,SAAS;AACb;AACA,6BAA6B,uBAAuB,GAAG;IACnD,MAAM;IACN,SAAS;AACb;AACA,6BAA6B,SAAS,GAAG;IACrC,MAAM;IACN,SAAS;AACb;AACA,MAAM,kCAAkC;AACxC;AACA,QAAQ,yBAAyB,GAAG;AACpC,0BAA0B,mBAAmB,GAAG;IAC5C,MAAM;IACN,SAAS;AACb;AACA,wEAAwE,GACxE,MAAM,6BAA6B;IAC/B,+DAA+D;IAC/D,qBAAqB;IACrB,+BAA+B;IAC/B,kBAAkB;IAClB,4CAA4C;IAC5C,sBAAsB;IACtB,2BAA2B;IAC3B,yBAAyB;IACzB,oDAAoD;IACpD,yBAAyB;IACzB,6CAA6C;IAC7C,gBAAgB;IAChB,gDAAgD;IAChD,mBAAmB;IACnB,2CAA2C;IAC3C,sBAAsB;IACtB,wEAAwE;IACxE,6BAA6B;IAC7B,uDAAuD;IACvD,iBAAiB;IACjB,wDAAwD;IACxD,oBAAoB;IACpB,sEAAsE;IACtE,6BAA6B;IAC7B,uCAAuC;IACvC,cAAc;IACd,mEAAmE;IACnE,iBAAiB;IACjB,uBAAuB;IACvB,iBAAiB;IACjB,2BAA2B;IAC3B,gBAAgB;IAChB,mCAAmC;IACnC,kBAAkB;IAClB,0BAA0B;IAC1B,eAAe;IACf,8BAA8B;IAC9B,mBAAmB;IACnB,oFAAoF;IACpF,sBAAsB;IACtB,6BAA6B;IAC7B,kBAAkB;IAClB,uCAAuC;IACvC,cAAc;IACd,qDAAqD;IACrD,yBAAyB;IACzB,sBAAsB;IACtB,wBAAwB;IACxB,wBAAwB;IACxB,sBAAsB;IACtB,4FAA4F;IAC5F,oBAAoB;IACpB,uBAAuB;IACvB,qBAAqB;IACrB,2BAA2B;IAC3B,yBAAyB;IACzB,gCAAgC;IAChC,8BAA8B;IAC9B,uBAAuB;IACvB,qBAAqB;IACrB,gCAAgC;IAChC,8BAA8B;IAC9B,yBAAyB;IACzB,gBAAgB;IAChB,oCAAoC;IACpC,mBAAmB;IACnB,oFAAoF;IACpF,sBAAsB;IACtB,uFAAuF;IACvF,oBAAoB;IACpB,eAAe;IACf,yBAAyB;IACzB,uBAAuB;IACvB,uBAAuB;IACvB,gBAAgB;IAChB,uDAAuD;IACvD,kBAAkB;IAClB,oDAAoD;IACpD,yBAAyB;IACzB,uBAAuB;IACvB,qBAAqB;IACrB,0BAA0B;IAC1B,mCAAmC;IACnC,oCAAoC;IACpC,sBAAsB;IACtB,qCAAqC;IACrC,uBAAuB;IACvB,oDAAoD;IACpD,mBAAmB;IACnB,+BAA+B;IAC/B,qBAAqB;IACrB,qBAAqB;IACrB,mBAAmB;IACnB,6DAA6D;IAC7D,gBAAgB;IAChB,+DAA+D;IAC/D,8BAA8B;IAC9B,oBAAoB;IACpB,kBAAkB;IAClB,sBAAsB;IACtB,oBAAoB;IACpB,uBAAuB;IACvB,eAAe;IACf,oFAAoF;IACpF,qBAAqB;IACrB,yDAAyD;IACzD,0BAA0B;IAC1B,8DAA8D;IAC9D,2BAA2B;IAC3B,wDAAwD;IACxD,8BAA8B;IAC9B,yFAAyF;IACzF,6BAA6B;IAC7B,kBAAkB;IAClB,wDAAwD;IACxD,gBAAgB;IAChB,2BAA2B;IAC3B,eAAe;IACf,iCAAiC;IACjC,eAAe;IACf,iCAAiC;IACjC,0BAA0B;IAC1B,4CAA4C;IAC5C,qCAAqC;IACrC,iDAAiD;IACjD,uBAAuB;AAC3B;AACA,6EAA6E,GAC7E,MAAM,kCAAkC;IACpC,kBAAkB,GAClB,8CAA8C;IAC9C,mBAAmB;IACnB,wBAAwB;IACxB,kBAAkB;IAClB,0BAA0B;IAC1B,aAAa;IACb,6BAA6B;IAC7B,qBAAqB;IACrB,eAAe,GACf,qCAAqC;IACrC,qBAAqB;IACrB,wCAAwC;IACxC,eAAe;IACf,6DAA6D;IAC7D,oBAAoB;IACpB,uCAAuC;IACvC,eAAe;IACf,2CAA2C;IAC3C,gBAAgB;IAChB,+BAA+B;IAC/B,YAAY;IACZ,gCAAgC;IAChC,2BAA2B;IAC3B,gCAAgC;IAChC,2BAA2B;IAC3B,4BAA4B;IAC5B,uBAAuB;IACvB,gCAAgC,GAChC,WAAW;IACX,mBAAmB;IACnB,oBAAoB;IACpB,iBAAiB;IACjB,0BAA0B,GAC1B,iBAAiB;IACjB,UAAU;IACV,kBAAkB;IAClB,gBAAgB;IAChB,oBAAoB;IACpB,wBAAwB;IACxB,aAAa;IACb,cAAc;IACd,mBAAmB;AACvB;AACA,0FAA0F,GAC1F,MAAM,kCAAkC;IACpC,wCAAwC,GACxC,WAAW;IACX,kBAAkB;IAClB,iBAAiB;IACjB,oBAAoB;IACpB,mBAAmB;IACnB,mBAAmB;IACnB,UAAU;IACV,SAAS;AACb","ignoreList":[0]}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`zlib`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils/validator.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTaskId = exports.isTopic = exports.isURL = exports.isUTCDateString = exports.isISODateString = exports.isPhoneNumber = exports.isEmail = exports.isPassword = exports.isUid = exports.isNonNullObject = exports.isObject = exports.isNonEmptyString = exports.isBase64String = exports.isString = exports.isNumber = exports.isBoolean = exports.isNonEmptyArray = exports.isArray = exports.isBuffer = void 0;\nconst url = require(\"url\");\n/**\n * Validates that a value is a byte buffer.\n *\n * @param value - The value to validate.\n * @returns Whether the value is byte buffer or not.\n */\nfunction isBuffer(value) {\n    return value instanceof Buffer;\n}\nexports.isBuffer = isBuffer;\n/**\n * Validates that a value is an array.\n *\n * @param value - The value to validate.\n * @returns Whether the value is an array or not.\n */\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nexports.isArray = isArray;\n/**\n * Validates that a value is a non-empty array.\n *\n * @param value - The value to validate.\n * @returns Whether the value is a non-empty array or not.\n */\nfunction isNonEmptyArray(value) {\n    return isArray(value) && value.length !== 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Validates that a value is a boolean.\n *\n * @param value - The value to validate.\n * @returns Whether the value is a boolean or not.\n */\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nexports.isBoolean = isBoolean;\n/**\n * Validates that a value is a number.\n *\n * @param value - The value to validate.\n * @returns Whether the value is a number or not.\n */\nfunction isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n}\nexports.isNumber = isNumber;\n/**\n * Validates that a value is a string.\n *\n * @param value - The value to validate.\n * @returns Whether the value is a string or not.\n */\nfunction isString(value) {\n    return typeof value === 'string';\n}\nexports.isString = isString;\n/**\n * Validates that a value is a base64 string.\n *\n * @param value - The value to validate.\n * @returns Whether the value is a base64 string or not.\n */\nfunction isBase64String(value) {\n    if (!isString(value)) {\n        return false;\n    }\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(value);\n}\nexports.isBase64String = isBase64String;\n/**\n * Validates that a value is a non-empty string.\n *\n * @param value - The value to validate.\n * @returns Whether the value is a non-empty string or not.\n */\nfunction isNonEmptyString(value) {\n    return isString(value) && value !== '';\n}\nexports.isNonEmptyString = isNonEmptyString;\n/**\n * Validates that a value is a nullable object.\n *\n * @param value - The value to validate.\n * @returns Whether the value is an object or not.\n */\nfunction isObject(value) {\n    return typeof value === 'object' && !isArray(value);\n}\nexports.isObject = isObject;\n/**\n * Validates that a value is a non-null object.\n *\n * @param value - The value to validate.\n * @returns Whether the value is a non-null object or not.\n */\nfunction isNonNullObject(value) {\n    return isObject(value) && value !== null;\n}\nexports.isNonNullObject = isNonNullObject;\n/**\n * Validates that a string is a valid Firebase Auth uid.\n *\n * @param uid - The string to validate.\n * @returns Whether the string is a valid Firebase Auth uid.\n */\nfunction isUid(uid) {\n    return typeof uid === 'string' && uid.length > 0 && uid.length <= 128;\n}\nexports.isUid = isUid;\n/**\n * Validates that a string is a valid Firebase Auth password.\n *\n * @param password - The password string to validate.\n * @returns Whether the string is a valid Firebase Auth password.\n */\nfunction isPassword(password) {\n    // A password must be a string of at least 6 characters.\n    return typeof password === 'string' && password.length >= 6;\n}\nexports.isPassword = isPassword;\n/**\n * Validates that a string is a valid email.\n *\n * @param email - The string to validate.\n * @returns Whether the string is valid email or not.\n */\nfunction isEmail(email) {\n    if (typeof email !== 'string') {\n        return false;\n    }\n    // There must at least one character before the @ symbol and another after.\n    const re = /^[^@]+@[^@]+$/;\n    return re.test(email);\n}\nexports.isEmail = isEmail;\n/**\n * Validates that a string is a valid phone number.\n *\n * @param phoneNumber - The string to validate.\n * @returns Whether the string is a valid phone number or not.\n */\nfunction isPhoneNumber(phoneNumber) {\n    if (typeof phoneNumber !== 'string') {\n        return false;\n    }\n    // Phone number validation is very lax here. Backend will enforce E.164\n    // spec compliance and will normalize accordingly.\n    // The phone number string must be non-empty and starts with a plus sign.\n    const re1 = /^\\+/;\n    // The phone number string must contain at least one alphanumeric character.\n    const re2 = /[\\da-zA-Z]+/;\n    return re1.test(phoneNumber) && re2.test(phoneNumber);\n}\nexports.isPhoneNumber = isPhoneNumber;\n/**\n * Validates that a string is a valid ISO date string.\n *\n * @param dateString - The string to validate.\n * @returns Whether the string is a valid ISO date string.\n */\nfunction isISODateString(dateString) {\n    try {\n        return isNonEmptyString(dateString) &&\n            (new Date(dateString).toISOString() === dateString);\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.isISODateString = isISODateString;\n/**\n * Validates that a string is a valid UTC date string.\n *\n * @param dateString - The string to validate.\n * @returns Whether the string is a valid UTC date string.\n */\nfunction isUTCDateString(dateString) {\n    try {\n        return isNonEmptyString(dateString) &&\n            (new Date(dateString).toUTCString() === dateString);\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.isUTCDateString = isUTCDateString;\n/**\n * Validates that a string is a valid web URL.\n *\n * @param urlStr - The string to validate.\n * @returns Whether the string is valid web URL or not.\n */\nfunction isURL(urlStr) {\n    if (typeof urlStr !== 'string') {\n        return false;\n    }\n    // Lookup illegal characters.\n    const re = /[^a-z0-9:/?#[\\]@!$&'()*+,;=.\\-_~%]/i;\n    if (re.test(urlStr)) {\n        return false;\n    }\n    try {\n        const uri = url.parse(urlStr);\n        const scheme = uri.protocol;\n        const slashes = uri.slashes;\n        const hostname = uri.hostname;\n        const pathname = uri.pathname;\n        if ((scheme !== 'http:' && scheme !== 'https:') || !slashes) {\n            return false;\n        }\n        // Validate hostname: Can contain letters, numbers, underscore and dashes separated by a dot.\n        // Each zone must not start with a hyphen or underscore.\n        if (!hostname || !/^[a-zA-Z0-9]+[\\w-]*([.]?[a-zA-Z0-9]+[\\w-]*)*$/.test(hostname)) {\n            return false;\n        }\n        // Allow for pathnames: (/chars+)*/?\n        // Where chars can be a combination of: a-z A-Z 0-9 - _ . ~ ! $ & ' ( ) * + , ; = : @ %\n        const pathnameRe = /^(\\/[\\w\\-.~!$'()*+,;=:@%]+)*\\/?$/;\n        // Validate pathname.\n        if (pathname &&\n            pathname !== '/' &&\n            !pathnameRe.test(pathname)) {\n            return false;\n        }\n        // Allow any query string and hash as long as no invalid character is used.\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.isURL = isURL;\n/**\n * Validates that the provided topic is a valid FCM topic name.\n *\n * @param topic - The topic to validate.\n * @returns Whether the provided topic is a valid FCM topic name.\n */\nfunction isTopic(topic) {\n    if (typeof topic !== 'string') {\n        return false;\n    }\n    const VALID_TOPIC_REGEX = /^(\\/topics\\/)?(private\\/)?[a-zA-Z0-9-_.~%]+$/;\n    return VALID_TOPIC_REGEX.test(topic);\n}\nexports.isTopic = isTopic;\n/**\n * Validates that the provided string can be used as a task ID\n * for Cloud Tasks.\n *\n * @param taskId - the task ID to validate.\n * @returns Whether the provided task ID is valid.\n */\nfunction isTaskId(taskId) {\n    if (typeof taskId !== 'string') {\n        return false;\n    }\n    const VALID_TASK_ID_REGEX = /^[A-Za-z0-9_-]+$/;\n    return VALID_TASK_ID_REGEX.test(taskId);\n}\nexports.isTaskId = isTaskId;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1362, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`http`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1368, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`https`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,KAAK,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1374, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`http2`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,KAAK,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1380, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils/api-request.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SessionHandler = exports.ExponentialBackoffPoller = exports.ApiSettings = exports.AuthorizedHttp2Client = exports.AuthorizedHttpClient = exports.parseHttpResponse = exports.Http2Client = exports.HttpClient = exports.RequestClient = exports.defaultRetryConfig = exports.RequestResponseError = void 0;\nconst error_1 = require(\"./error\");\nconst validator = require(\"./validator\");\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst http2 = require(\"http2\");\nconst url = require(\"url\");\nconst events_1 = require(\"events\");\nclass DefaultRequestResponse {\n    /**\n     * Constructs a new `RequestResponse` from the given `LowLevelResponse`.\n     */\n    constructor(resp) {\n        this.status = resp.status;\n        this.headers = resp.headers;\n        this.text = resp.data;\n        try {\n            if (!resp.data) {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INTERNAL_ERROR, 'HTTP response missing data.');\n            }\n            this.parsedData = JSON.parse(resp.data);\n        }\n        catch (err) {\n            this.parsedData = undefined;\n            this.parseError = err;\n        }\n        this.request = `${resp.config.method} ${resp.config.url}`;\n    }\n    get data() {\n        if (this.isJson()) {\n            return this.parsedData;\n        }\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.UNABLE_TO_PARSE_RESPONSE, `Error while parsing response data: \"${this.parseError.toString()}\". Raw server ` +\n            `response: \"${this.text}\". Status code: \"${this.status}\". Outgoing ` +\n            `request: \"${this.request}.\"`);\n    }\n    isJson() {\n        return typeof this.parsedData !== 'undefined';\n    }\n}\n/**\n * Represents a multipart HTTP or HTTP/2 response. Parts that constitute the response body can be accessed\n * via the multipart getter. Getters for text and data throw errors.\n */\nclass MultipartRequestResponse {\n    constructor(resp) {\n        this.status = resp.status;\n        this.headers = resp.headers;\n        this.multipart = resp.multipart;\n    }\n    get text() {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.UNABLE_TO_PARSE_RESPONSE, 'Unable to parse multipart payload as text');\n    }\n    get data() {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.UNABLE_TO_PARSE_RESPONSE, 'Unable to parse multipart payload as JSON');\n    }\n    isJson() {\n        return false;\n    }\n}\nclass RequestResponseError extends Error {\n    constructor(response) {\n        super(`Server responded with status ${response.status}.`);\n        this.response = response;\n        // Set the prototype so that instanceof checks will work correctly.\n        // See: https://github.com/Microsoft/TypeScript/issues/13965\n        Object.setPrototypeOf(this, RequestResponseError.prototype);\n    }\n}\nexports.RequestResponseError = RequestResponseError;\n/**\n * Default retry configuration for HTTP and HTTP/2 requests. Retries up to 4 times on connection reset and timeout\n * errors as well as 503 errors. Exposed as a function to ensure that every `RequestClient` gets its own `RetryConfig`\n * instance.\n */\nfunction defaultRetryConfig() {\n    return {\n        maxRetries: 4,\n        statusCodes: [503],\n        ioErrorCodes: ['ECONNRESET', 'ETIMEDOUT'],\n        backOffFactor: 0.5,\n        maxDelayInMillis: 60 * 1000,\n    };\n}\nexports.defaultRetryConfig = defaultRetryConfig;\n/**\n * Ensures that the given `RetryConfig` object is valid.\n *\n * @param retry - The configuration to be validated.\n */\nfunction validateRetryConfig(retry) {\n    if (!validator.isNumber(retry.maxRetries) || retry.maxRetries < 0) {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_ARGUMENT, 'maxRetries must be a non-negative integer');\n    }\n    if (typeof retry.backOffFactor !== 'undefined') {\n        if (!validator.isNumber(retry.backOffFactor) || retry.backOffFactor < 0) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_ARGUMENT, 'backOffFactor must be a non-negative number');\n        }\n    }\n    if (!validator.isNumber(retry.maxDelayInMillis) || retry.maxDelayInMillis < 0) {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_ARGUMENT, 'maxDelayInMillis must be a non-negative integer');\n    }\n    if (typeof retry.statusCodes !== 'undefined' && !validator.isArray(retry.statusCodes)) {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_ARGUMENT, 'statusCodes must be an array');\n    }\n    if (typeof retry.ioErrorCodes !== 'undefined' && !validator.isArray(retry.ioErrorCodes)) {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_ARGUMENT, 'ioErrorCodes must be an array');\n    }\n}\nclass RequestClient {\n    constructor(retry = defaultRetryConfig()) {\n        if (retry) {\n            this.retry = retry;\n            validateRetryConfig(this.retry);\n        }\n    }\n    createRequestResponse(resp) {\n        if (resp.multipart) {\n            return new MultipartRequestResponse(resp);\n        }\n        return new DefaultRequestResponse(resp);\n    }\n    waitForRetry(delayMillis) {\n        if (delayMillis > 0) {\n            return new Promise((resolve) => {\n                setTimeout(resolve, delayMillis);\n            });\n        }\n        return Promise.resolve();\n    }\n    /**\n     * Checks if a failed request is eligible for a retry, and if so returns the duration to wait before initiating\n     * the retry.\n     *\n     * @param retryAttempts - Number of retries completed up to now.\n     * @param err - The last encountered error.\n     * @returns A 2-tuple where the 1st element is the duration to wait before another retry, and the\n     *     2nd element is a boolean indicating whether the request is eligible for a retry or not.\n     */\n    getRetryDelayMillis(retryAttempts, err) {\n        if (!this.isRetryEligible(retryAttempts, err)) {\n            return [0, false];\n        }\n        const response = err.response;\n        if (response && response.headers['retry-after']) {\n            const delayMillis = this.parseRetryAfterIntoMillis(response.headers['retry-after']);\n            if (delayMillis > 0) {\n                return [delayMillis, true];\n            }\n        }\n        return [this.backOffDelayMillis(retryAttempts), true];\n    }\n    isRetryEligible(retryAttempts, err) {\n        if (!this.retry) {\n            return false;\n        }\n        if (retryAttempts >= this.retry.maxRetries) {\n            return false;\n        }\n        if (err.response) {\n            const statusCodes = this.retry.statusCodes || [];\n            return statusCodes.indexOf(err.response.status) !== -1;\n        }\n        if (err.code) {\n            const retryCodes = this.retry.ioErrorCodes || [];\n            return retryCodes.indexOf(err.code) !== -1;\n        }\n        return false;\n    }\n    /**???\n     * Parses the Retry-After header as a milliseconds value. Return value is negative if the Retry-After header\n     * contains an expired timestamp or otherwise malformed.\n     */\n    parseRetryAfterIntoMillis(retryAfter) {\n        const delaySeconds = parseInt(retryAfter, 10);\n        if (!isNaN(delaySeconds)) {\n            return delaySeconds * 1000;\n        }\n        const date = new Date(retryAfter);\n        if (!isNaN(date.getTime())) {\n            return date.getTime() - Date.now();\n        }\n        return -1;\n    }\n    backOffDelayMillis(retryAttempts) {\n        if (retryAttempts === 0) {\n            return 0;\n        }\n        if (!this.retry) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INTERNAL_ERROR, 'Expected this.retry to exist.');\n        }\n        const backOffFactor = this.retry.backOffFactor || 0;\n        const delayInSeconds = (2 ** retryAttempts) * backOffFactor;\n        return Math.min(delayInSeconds * 1000, this.retry.maxDelayInMillis);\n    }\n}\nexports.RequestClient = RequestClient;\nclass HttpClient extends RequestClient {\n    constructor(retry) {\n        super(retry);\n    }\n    /**\n     * Sends an HTTP request to a remote server. If the server responds with a successful response (2xx), the returned\n     * promise resolves with an `RequestResponse`. If the server responds with an error (3xx, 4xx, 5xx), the promise\n     * rejects with an `RequestResponseError`. In case of all other errors, the promise rejects with a `FirebaseAppError`.\n     * If a request fails due to a low-level network error, the client transparently retries the request once before\n     * rejecting the promise.\n     *\n     * If the request data is specified as an object, it will be serialized into a JSON string. The application/json\n     * content-type header will also be automatically set in this case. For all other payload types, the content-type\n     * header should be explicitly set by the caller. To send a JSON leaf value (e.g. \"foo\", 5), parse it into JSON,\n     * and pass as a string or a Buffer along with the appropriate content-type header.\n     *\n     * @param config - HTTP request to be sent.\n     * @returns A promise that resolves with the response details.\n     */\n    send(config) {\n        return this.sendWithRetry(config);\n    }\n    /**\n     * Sends an HTTP request. In the event of an error, retries the HTTP request according to the\n     * `RetryConfig` set on the `HttpClient`.\n     *\n     * @param config - HTTP request to be sent.\n     * @param retryAttempts - Number of retries performed up to now.\n     * @returns A promise that resolves with the response details.\n     */\n    sendWithRetry(config, retryAttempts = 0) {\n        return AsyncHttpCall.invoke(config)\n            .then((resp) => {\n            return this.createRequestResponse(resp);\n        })\n            .catch((err) => {\n            const [delayMillis, canRetry] = this.getRetryDelayMillis(retryAttempts, err);\n            if (canRetry && this.retry && delayMillis <= this.retry.maxDelayInMillis) {\n                return this.waitForRetry(delayMillis).then(() => {\n                    return this.sendWithRetry(config, retryAttempts + 1);\n                });\n            }\n            if (err.response) {\n                throw new RequestResponseError(this.createRequestResponse(err.response));\n            }\n            if (err.code === 'ETIMEDOUT') {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.NETWORK_TIMEOUT, `Error while making request: ${err.message}.`);\n            }\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.NETWORK_ERROR, `Error while making request: ${err.message}. Error code: ${err.code}`);\n        });\n    }\n}\nexports.HttpClient = HttpClient;\nclass Http2Client extends RequestClient {\n    constructor(retry = defaultRetryConfig()) {\n        super(retry);\n    }\n    /**\n     * Sends an HTTP/2 request to a remote server. If the server responds with a successful response (2xx), the returned\n     * promise resolves with an `RequestResponse`. If the server responds with an error (3xx, 4xx, 5xx), the promise\n     * rejects with an `RequestResponseError`. In case of all other errors, the promise rejects with a `FirebaseAppError`.\n     * If a request fails due to a low-level network error, the client transparently retries the request once before\n     * rejecting the promise.\n     *\n     * If the request data is specified as an object, it will be serialized into a JSON string. The application/json\n     * content-type header will also be automatically set in this case. For all other payload types, the content-type\n     * header should be explicitly set by the caller. To send a JSON leaf value (e.g. \"foo\", 5), parse it into JSON,\n     * and pass as a string or a Buffer along with the appropriate content-type header.\n     *\n     * @param config - HTTP/2 request to be sent.\n     * @returns A promise that resolves with the response details.\n     */\n    send(config) {\n        return this.sendWithRetry(config);\n    }\n    /**\n     * Sends an HTTP/2 request. In the event of an error, retries the HTTP/2 request according to the\n     * `RetryConfig` set on the `Http2Client`.\n     *\n     * @param config - HTTP/2 request to be sent.\n     * @param retryAttempts - Number of retries performed up to now.\n     * @returns A promise that resolves with the response details.\n     */\n    sendWithRetry(config, retryAttempts = 0) {\n        return AsyncHttp2Call.invoke(config)\n            .then((resp) => {\n            return this.createRequestResponse(resp);\n        })\n            .catch((err) => {\n            const [delayMillis, canRetry] = this.getRetryDelayMillis(retryAttempts, err);\n            if (canRetry && this.retry && delayMillis <= this.retry.maxDelayInMillis) {\n                return this.waitForRetry(delayMillis).then(() => {\n                    return this.sendWithRetry(config, retryAttempts + 1);\n                });\n            }\n            if (err.response) {\n                throw new RequestResponseError(this.createRequestResponse(err.response));\n            }\n            if (err.code === 'ETIMEDOUT') {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.NETWORK_TIMEOUT, `Error while making request: ${err.message}.`);\n            }\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.NETWORK_ERROR, `Error while making request: ${err.message}. Error code: ${err.code}`);\n        });\n    }\n}\nexports.Http2Client = Http2Client;\n/**\n * Parses a full HTTP or HTTP/2 response message containing both a header and a body.\n *\n * @param response - The HTTP or HTTP/2 response to be parsed.\n * @param config - The request configuration that resulted in the HTTP or HTTP/2 response.\n * @returns An object containing the response's parsed status, headers and the body.\n */\nfunction parseHttpResponse(response, config) {\n    const responseText = validator.isBuffer(response) ?\n        response.toString('utf-8') : response;\n    const endOfHeaderPos = responseText.indexOf('\\r\\n\\r\\n');\n    const headerLines = responseText.substring(0, endOfHeaderPos).split('\\r\\n');\n    const statusLine = headerLines[0];\n    const status = statusLine.trim().split(/\\s/)[1];\n    const headers = {};\n    headerLines.slice(1).forEach((line) => {\n        const colonPos = line.indexOf(':');\n        const name = line.substring(0, colonPos).trim().toLowerCase();\n        const value = line.substring(colonPos + 1).trim();\n        headers[name] = value;\n    });\n    let data = responseText.substring(endOfHeaderPos + 4);\n    if (data.endsWith('\\n')) {\n        data = data.slice(0, -1);\n    }\n    if (data.endsWith('\\r')) {\n        data = data.slice(0, -1);\n    }\n    const lowLevelResponse = {\n        status: parseInt(status, 10),\n        headers,\n        data,\n        config,\n        request: null,\n    };\n    if (!validator.isNumber(lowLevelResponse.status)) {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INTERNAL_ERROR, 'Malformed HTTP status line.');\n    }\n    return new DefaultRequestResponse(lowLevelResponse);\n}\nexports.parseHttpResponse = parseHttpResponse;\n/**\n * A helper class for common functionality needed to send requests over the wire.\n * It also wraps the callback API of the Node.js standard library in a more flexible Promise API.\n */\nclass AsyncRequestCall {\n    constructor(configImpl) {\n        this.configImpl = configImpl;\n    }\n    /**\n     * Extracts multipart boundary from the HTTP header. The content-type header of a multipart\n     * response has the form 'multipart/subtype; boundary=string'.\n     *\n     * If the content-type header does not exist, or does not start with\n     * 'multipart/', then null will be returned.\n     */\n    getMultipartBoundary(headers) {\n        const contentType = headers['content-type'];\n        if (!contentType || !contentType.startsWith('multipart/')) {\n            return null;\n        }\n        const segments = contentType.split(';');\n        const emptyObject = {};\n        const headerParams = segments.slice(1)\n            .map((segment) => segment.trim().split('='))\n            .reduce((curr, params) => {\n            // Parse key=value pairs in the content-type header into properties of an object.\n            if (params.length === 2) {\n                const keyValuePair = {};\n                keyValuePair[params[0]] = params[1];\n                return Object.assign(curr, keyValuePair);\n            }\n            return curr;\n        }, emptyObject);\n        return headerParams.boundary;\n    }\n    handleMultipartResponse(response, respStream, boundary) {\n        const busboy = require('@fastify/busboy'); // eslint-disable-line @typescript-eslint/no-var-requires\n        const multipartParser = new busboy.Dicer({ boundary });\n        const responseBuffer = [];\n        multipartParser.on('part', (part) => {\n            const tempBuffers = [];\n            part.on('data', (partData) => {\n                tempBuffers.push(partData);\n            });\n            part.on('end', () => {\n                responseBuffer.push(Buffer.concat(tempBuffers));\n            });\n        });\n        multipartParser.on('finish', () => {\n            response.data = undefined;\n            response.multipart = responseBuffer;\n            this.finalizeResponse(response);\n        });\n        respStream.pipe(multipartParser);\n    }\n    handleRegularResponse(response, respStream) {\n        const responseBuffer = [];\n        respStream.on('data', (chunk) => {\n            responseBuffer.push(chunk);\n        });\n        respStream.on('error', (err) => {\n            const req = response.request;\n            if (req && req.destroyed) {\n                return;\n            }\n            this.enhanceAndReject(err, null, req);\n        });\n        respStream.on('end', () => {\n            response.data = Buffer.concat(responseBuffer).toString();\n            this.finalizeResponse(response);\n        });\n    }\n    /**\n     * Finalizes the current request call in-flight by either resolving or rejecting the associated\n     * promise. In the event of an error, adds additional useful information to the returned error.\n     */\n    finalizeResponse(response) {\n        if (response.status >= 200 && response.status < 300) {\n            this.resolve(response);\n        }\n        else {\n            this.rejectWithError('Request failed with status code ' + response.status, null, response.request, response);\n        }\n    }\n    /**\n     * Creates a new error from the given message, and enhances it with other information available.\n     * Then the promise associated with this request call is rejected with the resulting error.\n     */\n    rejectWithError(message, code, request, response) {\n        const error = new Error(message);\n        this.enhanceAndReject(error, code, request, response);\n    }\n    enhanceAndReject(error, code, request, response) {\n        this.reject(this.enhanceError(error, code, request, response));\n    }\n    /**\n     * Enhances the given error by adding more information to it. Specifically, the request config,\n     * the underlying request and response will be attached to the error.\n     */\n    enhanceError(error, code, request, response) {\n        error.config = this.configImpl;\n        if (code) {\n            error.code = code;\n        }\n        error.request = request;\n        error.response = response;\n        return error;\n    }\n}\n/**\n * A helper class for sending HTTP requests over the wire. This is a wrapper around the standard\n * http and https packages of Node.js, providing content processing, timeouts and error handling.\n * It also wraps the callback API of the Node.js standard library in a more flexible Promise API.\n */\nclass AsyncHttpCall extends AsyncRequestCall {\n    /**\n     * Sends an HTTP request based on the provided configuration.\n     */\n    static invoke(config) {\n        return new AsyncHttpCall(config).promise;\n    }\n    constructor(config) {\n        const httpConfigImpl = new HttpRequestConfigImpl(config);\n        super(httpConfigImpl);\n        try {\n            this.httpConfigImpl = httpConfigImpl;\n            this.options = this.httpConfigImpl.buildRequestOptions();\n            this.entity = this.httpConfigImpl.buildEntity(this.options.headers);\n            this.promise = new Promise((resolve, reject) => {\n                this.resolve = resolve;\n                this.reject = reject;\n                this.execute();\n            });\n        }\n        catch (err) {\n            this.promise = Promise.reject(this.enhanceError(err, null));\n        }\n    }\n    execute() {\n        const transport = this.options.protocol === 'https:' ? https : http;\n        const req = transport.request(this.options, (res) => {\n            this.handleResponse(res, req);\n        });\n        // Handle errors\n        req.on('error', (err) => {\n            if (req.aborted) {\n                return;\n            }\n            this.enhanceAndReject(err, null, req);\n        });\n        const timeout = this.httpConfigImpl.timeout;\n        const timeoutCallback = () => {\n            req.destroy();\n            this.rejectWithError(`timeout of ${timeout}ms exceeded`, 'ETIMEDOUT', req);\n        };\n        if (timeout) {\n            // Listen to timeouts and throw an error.\n            req.setTimeout(timeout, timeoutCallback);\n        }\n        // Send the request\n        req.end(this.entity);\n    }\n    handleResponse(res, req) {\n        if (req.aborted) {\n            return;\n        }\n        if (!res.statusCode) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INTERNAL_ERROR, 'Expected a statusCode on the response from a ClientRequest');\n        }\n        const response = {\n            status: res.statusCode,\n            headers: res.headers,\n            request: req,\n            data: undefined,\n            config: this.httpConfigImpl,\n        };\n        const boundary = this.getMultipartBoundary(res.headers);\n        const respStream = this.uncompressResponse(res);\n        if (boundary) {\n            this.handleMultipartResponse(response, respStream, boundary);\n        }\n        else {\n            this.handleRegularResponse(response, respStream);\n        }\n    }\n    uncompressResponse(res) {\n        // Uncompress the response body transparently if required.\n        let respStream = res;\n        const encodings = ['gzip', 'compress', 'deflate'];\n        if (res.headers['content-encoding'] && encodings.indexOf(res.headers['content-encoding']) !== -1) {\n            // Add the unzipper to the body stream processing pipeline.\n            const zlib = require('zlib'); // eslint-disable-line @typescript-eslint/no-var-requires\n            respStream = respStream.pipe(zlib.createUnzip());\n            // Remove the content-encoding in order to not confuse downstream operations.\n            delete res.headers['content-encoding'];\n        }\n        return respStream;\n    }\n}\nclass AsyncHttp2Call extends AsyncRequestCall {\n    /**\n     * Sends an HTTP2 request based on the provided configuration.\n     */\n    static invoke(config) {\n        return new AsyncHttp2Call(config).promise;\n    }\n    constructor(config) {\n        const http2ConfigImpl = new Http2RequestConfigImpl(config);\n        super(http2ConfigImpl);\n        try {\n            this.http2ConfigImpl = http2ConfigImpl;\n            this.options = this.http2ConfigImpl.buildRequestOptions();\n            this.entity = this.http2ConfigImpl.buildEntity(this.options.headers);\n            this.promise = new Promise((resolve, reject) => {\n                this.resolve = resolve;\n                this.reject = reject;\n                this.execute();\n            });\n        }\n        catch (err) {\n            this.promise = Promise.reject(this.enhanceError(err, null));\n        }\n    }\n    execute() {\n        const req = this.http2ConfigImpl.http2SessionHandler.session.request({\n            ':method': this.options.method,\n            ':scheme': this.options.protocol,\n            ':path': this.options.path,\n            ...this.options.headers\n        });\n        req.on('response', (headers) => {\n            this.handleHttp2Response(headers, req);\n        });\n        // Handle errors\n        req.on('error', (err) => {\n            if (req.aborted) {\n                return;\n            }\n            this.enhanceAndReject(err, null, req);\n        });\n        const timeout = this.http2ConfigImpl.timeout;\n        const timeoutCallback = () => {\n            req.destroy();\n            this.rejectWithError(`timeout of ${timeout}ms exceeded`, 'ETIMEDOUT', req);\n        };\n        if (timeout) {\n            // Listen to timeouts and throw an error.\n            req.setTimeout(timeout, timeoutCallback);\n        }\n        req.end(this.entity);\n    }\n    handleHttp2Response(headers, stream) {\n        if (stream.aborted) {\n            return;\n        }\n        if (!headers[':status']) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INTERNAL_ERROR, 'Expected a statusCode on the response from a ClientRequest');\n        }\n        const response = {\n            status: headers[':status'],\n            headers: headers,\n            request: stream,\n            data: undefined,\n            config: this.http2ConfigImpl,\n        };\n        const boundary = this.getMultipartBoundary(headers);\n        const respStream = this.uncompressResponse(headers, stream);\n        if (boundary) {\n            this.handleMultipartResponse(response, respStream, boundary);\n        }\n        else {\n            this.handleRegularResponse(response, respStream);\n        }\n    }\n    uncompressResponse(headers, stream) {\n        // Uncompress the response body transparently if required.\n        let respStream = stream;\n        const encodings = ['gzip', 'compress', 'deflate'];\n        if (headers['content-encoding'] && encodings.indexOf(headers['content-encoding']) !== -1) {\n            // Add the unzipper to the body stream processing pipeline.\n            const zlib = require('zlib'); // eslint-disable-line @typescript-eslint/no-var-requires\n            respStream = respStream.pipe(zlib.createUnzip());\n            // Remove the content-encoding in order to not confuse downstream operations.\n            delete headers['content-encoding'];\n        }\n        return respStream;\n    }\n}\n/**\n * An adapter class with common functionality needed to extract options and entity data from a `RequestConfig`.\n */\nclass BaseRequestConfigImpl {\n    constructor(config) {\n        this.config = config;\n        this.config = config;\n    }\n    get method() {\n        return this.config.method;\n    }\n    get url() {\n        return this.config.url;\n    }\n    get headers() {\n        return this.config.headers;\n    }\n    get data() {\n        return this.config.data;\n    }\n    get timeout() {\n        return this.config.timeout;\n    }\n    buildEntity(headers) {\n        let data;\n        if (!this.hasEntity() || !this.isEntityEnclosingRequest()) {\n            return data;\n        }\n        if (validator.isBuffer(this.data)) {\n            data = this.data;\n        }\n        else if (validator.isObject(this.data)) {\n            data = Buffer.from(JSON.stringify(this.data), 'utf-8');\n            if (typeof headers['content-type'] === 'undefined') {\n                headers['content-type'] = 'application/json;charset=utf-8';\n            }\n        }\n        else if (validator.isString(this.data)) {\n            data = Buffer.from(this.data, 'utf-8');\n        }\n        else {\n            throw new Error('Request data must be a string, a Buffer or a json serializable object');\n        }\n        // Add Content-Length header if data exists.\n        headers['Content-Length'] = data.length.toString();\n        return data;\n    }\n    buildUrl() {\n        const fullUrl = this.urlWithProtocol();\n        if (!this.hasEntity() || this.isEntityEnclosingRequest()) {\n            return url.parse(fullUrl);\n        }\n        if (!validator.isObject(this.data)) {\n            throw new Error(`${this.method} requests cannot have a body`);\n        }\n        // Parse URL and append data to query string.\n        const parsedUrl = new url.URL(fullUrl);\n        const dataObj = this.data;\n        for (const key in dataObj) {\n            if (Object.prototype.hasOwnProperty.call(dataObj, key)) {\n                parsedUrl.searchParams.append(key, dataObj[key]);\n            }\n        }\n        return url.parse(parsedUrl.toString());\n    }\n    urlWithProtocol() {\n        const fullUrl = this.url;\n        if (fullUrl.startsWith('http://') || fullUrl.startsWith('https://')) {\n            return fullUrl;\n        }\n        return `https://${fullUrl}`;\n    }\n    hasEntity() {\n        return !!this.data;\n    }\n    isEntityEnclosingRequest() {\n        // GET and HEAD requests do not support entity (body) in request.\n        return this.method !== 'GET' && this.method !== 'HEAD';\n    }\n}\n/**\n * An adapter class for extracting options and entity data from an `HttpRequestConfig`.\n */\nclass HttpRequestConfigImpl extends BaseRequestConfigImpl {\n    constructor(httpConfig) {\n        super(httpConfig);\n        this.httpConfig = httpConfig;\n    }\n    get httpAgent() {\n        return this.httpConfig.httpAgent;\n    }\n    buildRequestOptions() {\n        const parsed = this.buildUrl();\n        const protocol = parsed.protocol;\n        let port = parsed.port;\n        if (!port) {\n            const isHttps = protocol === 'https:';\n            port = isHttps ? '443' : '80';\n        }\n        return {\n            protocol,\n            hostname: parsed.hostname,\n            port,\n            path: parsed.path,\n            method: this.method,\n            agent: this.httpAgent,\n            headers: Object.assign({}, this.headers),\n        };\n    }\n}\n/**\n * An adapter class for extracting options and entity data from an `Http2RequestConfig`.\n */\nclass Http2RequestConfigImpl extends BaseRequestConfigImpl {\n    constructor(http2Config) {\n        super(http2Config);\n        this.http2Config = http2Config;\n    }\n    get http2SessionHandler() {\n        return this.http2Config.http2SessionHandler;\n    }\n    buildRequestOptions() {\n        const parsed = this.buildUrl();\n        const protocol = parsed.protocol;\n        return {\n            protocol,\n            path: parsed.path,\n            method: this.method,\n            headers: Object.assign({}, this.headers),\n        };\n    }\n}\nclass AuthorizedHttpClient extends HttpClient {\n    constructor(app) {\n        super();\n        this.app = app;\n    }\n    send(request) {\n        return this.getToken().then((token) => {\n            const requestCopy = Object.assign({}, request);\n            requestCopy.headers = Object.assign({}, request.headers);\n            const authHeader = 'Authorization';\n            requestCopy.headers[authHeader] = `Bearer ${token}`;\n            // Fix issue where firebase-admin does not specify quota project that is\n            // necessary for use when utilizing human account with ADC (RSDF)\n            if (!requestCopy.headers['x-goog-user-project'] && this.app.options.projectId) {\n                requestCopy.headers['x-goog-user-project'] = this.app.options.projectId;\n            }\n            if (!requestCopy.httpAgent && this.app.options.httpAgent) {\n                requestCopy.httpAgent = this.app.options.httpAgent;\n            }\n            return super.send(requestCopy);\n        });\n    }\n    getToken() {\n        return this.app.INTERNAL.getToken()\n            .then((accessTokenObj) => accessTokenObj.accessToken);\n    }\n}\nexports.AuthorizedHttpClient = AuthorizedHttpClient;\nclass AuthorizedHttp2Client extends Http2Client {\n    constructor(app) {\n        super();\n        this.app = app;\n    }\n    send(request) {\n        return this.getToken().then((token) => {\n            const requestCopy = Object.assign({}, request);\n            requestCopy.headers = Object.assign({}, request.headers);\n            const authHeader = 'Authorization';\n            requestCopy.headers[authHeader] = `Bearer ${token}`;\n            return super.send(requestCopy);\n        });\n    }\n    getToken() {\n        return this.app.INTERNAL.getToken()\n            .then((accessTokenObj) => accessTokenObj.accessToken);\n    }\n}\nexports.AuthorizedHttp2Client = AuthorizedHttp2Client;\n/**\n * Class that defines all the settings for the backend API endpoint.\n *\n * @param endpoint - The Firebase Auth backend endpoint.\n * @param httpMethod - The HTTP method for that endpoint.\n * @constructor\n */\nclass ApiSettings {\n    constructor(endpoint, httpMethod = 'POST') {\n        this.endpoint = endpoint;\n        this.httpMethod = httpMethod;\n        this.setRequestValidator(null)\n            .setResponseValidator(null);\n    }\n    /** @returns The backend API endpoint. */\n    getEndpoint() {\n        return this.endpoint;\n    }\n    /** @returns The request HTTP method. */\n    getHttpMethod() {\n        return this.httpMethod;\n    }\n    /**\n     * @param requestValidator - The request validator.\n     * @returns The current API settings instance.\n     */\n    setRequestValidator(requestValidator) {\n        const nullFunction = () => undefined;\n        this.requestValidator = requestValidator || nullFunction;\n        return this;\n    }\n    /** @returns The request validator. */\n    getRequestValidator() {\n        return this.requestValidator;\n    }\n    /**\n     * @param responseValidator - The response validator.\n     * @returns The current API settings instance.\n     */\n    setResponseValidator(responseValidator) {\n        const nullFunction = () => undefined;\n        this.responseValidator = responseValidator || nullFunction;\n        return this;\n    }\n    /** @returns The response validator. */\n    getResponseValidator() {\n        return this.responseValidator;\n    }\n}\nexports.ApiSettings = ApiSettings;\n/**\n * Class used for polling an endpoint with exponential backoff.\n *\n * Example usage:\n * ```\n * const poller = new ExponentialBackoffPoller();\n * poller\n *     .poll(() => {\n *       return myRequestToPoll()\n *           .then((responseData: any) => {\n *             if (!isValid(responseData)) {\n *               // Continue polling.\n *               return null;\n *             }\n *\n *             // Polling complete. Resolve promise with final response data.\n *             return responseData;\n *           });\n *     })\n *     .then((responseData: any) => {\n *       console.log(`Final response: ${responseData}`);\n *     });\n * ```\n */\nclass ExponentialBackoffPoller extends events_1.EventEmitter {\n    constructor(initialPollingDelayMillis = 1000, maxPollingDelayMillis = 10000, masterTimeoutMillis = 60000) {\n        super();\n        this.initialPollingDelayMillis = initialPollingDelayMillis;\n        this.maxPollingDelayMillis = maxPollingDelayMillis;\n        this.masterTimeoutMillis = masterTimeoutMillis;\n        this.numTries = 0;\n        this.completed = false;\n    }\n    /**\n     * Poll the provided callback with exponential backoff.\n     *\n     * @param callback - The callback to be called for each poll. If the\n     *     callback resolves to a falsey value, polling will continue. Otherwise, the truthy\n     *     resolution will be used to resolve the promise returned by this method.\n     * @returns A Promise which resolves to the truthy value returned by the provided\n     *     callback when polling is complete.\n     */\n    poll(callback) {\n        if (this.pollCallback) {\n            throw new Error('poll() can only be called once per instance of ExponentialBackoffPoller');\n        }\n        this.pollCallback = callback;\n        this.on('poll', this.repoll);\n        this.masterTimer = setTimeout(() => {\n            if (this.completed) {\n                return;\n            }\n            this.markCompleted();\n            this.reject(new Error('ExponentialBackoffPoller deadline exceeded - Master timeout reached'));\n        }, this.masterTimeoutMillis);\n        return new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n            this.repoll();\n        });\n    }\n    repoll() {\n        this.pollCallback()\n            .then((result) => {\n            if (this.completed) {\n                return;\n            }\n            if (!result) {\n                this.repollTimer =\n                    setTimeout(() => this.emit('poll'), this.getPollingDelayMillis());\n                this.numTries++;\n                return;\n            }\n            this.markCompleted();\n            this.resolve(result);\n        })\n            .catch((err) => {\n            if (this.completed) {\n                return;\n            }\n            this.markCompleted();\n            this.reject(err);\n        });\n    }\n    getPollingDelayMillis() {\n        const increasedPollingDelay = Math.pow(2, this.numTries) * this.initialPollingDelayMillis;\n        return Math.min(increasedPollingDelay, this.maxPollingDelayMillis);\n    }\n    markCompleted() {\n        this.completed = true;\n        if (this.masterTimer) {\n            clearTimeout(this.masterTimer);\n        }\n        if (this.repollTimer) {\n            clearTimeout(this.repollTimer);\n        }\n    }\n}\nexports.ExponentialBackoffPoller = ExponentialBackoffPoller;\nclass Http2SessionHandler {\n    constructor(url) {\n        this.http2Session = this.createSession(url);\n    }\n    createSession(url) {\n        if (!this.http2Session || this.isClosed) {\n            const opts = {\n                // Set local max concurrent stream limit to respect backend limit\n                peerMaxConcurrentStreams: 100,\n                ALPNProtocols: ['h2']\n            };\n            const http2Session = http2.connect(url, opts);\n            http2Session.on('goaway', (errorCode, _, opaqueData) => {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.NETWORK_ERROR, `Error while making requests: GOAWAY - ${opaqueData.toString()}, Error code: ${errorCode}`);\n            });\n            http2Session.on('error', (error) => {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.NETWORK_ERROR, `Error while making requests: ${error}`);\n            });\n            return http2Session;\n        }\n        return this.http2Session;\n    }\n    get session() {\n        return this.http2Session;\n    }\n    get isClosed() {\n        return this.http2Session.closed;\n    }\n    close() {\n        this.http2Session.close();\n    }\n}\nexports.Http2SessionHandler = Http2SessionHandler;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2370, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/app/credential-internal.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicationDefault = exports.isApplicationDefault = exports.ImpersonatedServiceAccountCredential = exports.RefreshTokenCredential = exports.ComputeEngineCredential = exports.ServiceAccountCredential = void 0;\nconst fs = require(\"fs\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst error_1 = require(\"../utils/error\");\nconst api_request_1 = require(\"../utils/api-request\");\nconst util = require(\"../utils/validator\");\nconst GOOGLE_TOKEN_AUDIENCE = 'https://accounts.google.com/o/oauth2/token';\nconst GOOGLE_AUTH_TOKEN_HOST = 'accounts.google.com';\nconst GOOGLE_AUTH_TOKEN_PATH = '/o/oauth2/token';\n// NOTE: the Google Metadata Service uses HTTP over a vlan\nconst GOOGLE_METADATA_SERVICE_HOST = 'metadata.google.internal';\nconst GOOGLE_METADATA_SERVICE_TOKEN_PATH = '/computeMetadata/v1/instance/service-accounts/default/token';\nconst GOOGLE_METADATA_SERVICE_IDENTITY_PATH = '/computeMetadata/v1/instance/service-accounts/default/identity';\nconst GOOGLE_METADATA_SERVICE_PROJECT_ID_PATH = '/computeMetadata/v1/project/project-id';\nconst GOOGLE_METADATA_SERVICE_ACCOUNT_ID_PATH = '/computeMetadata/v1/instance/service-accounts/default/email';\nconst configDir = (() => {\n    // Windows has a dedicated low-rights location for apps at ~/Application Data\n    const sys = os.platform();\n    if (sys && sys.length >= 3 && sys.substring(0, 3).toLowerCase() === 'win') {\n        return process.env.APPDATA;\n    }\n    // On *nix the gcloud cli creates a . dir.\n    return process.env.HOME && path.resolve(process.env.HOME, '.config');\n})();\nconst GCLOUD_CREDENTIAL_SUFFIX = 'gcloud/application_default_credentials.json';\nconst GCLOUD_CREDENTIAL_PATH = configDir && path.resolve(configDir, GCLOUD_CREDENTIAL_SUFFIX);\nconst REFRESH_TOKEN_HOST = 'www.googleapis.com';\nconst REFRESH_TOKEN_PATH = '/oauth2/v4/token';\nconst ONE_HOUR_IN_SECONDS = 60 * 60;\nconst JWT_ALGORITHM = 'RS256';\n/**\n * Implementation of Credential that uses a service account.\n */\nclass ServiceAccountCredential {\n    /**\n     * Creates a new ServiceAccountCredential from the given parameters.\n     *\n     * @param serviceAccountPathOrObject - Service account json object or path to a service account json file.\n     * @param httpAgent - Optional http.Agent to use when calling the remote token server.\n     * @param implicit - An optinal boolean indicating whether this credential was implicitly discovered from the\n     *   environment, as opposed to being explicitly specified by the developer.\n     *\n     * @constructor\n     */\n    constructor(serviceAccountPathOrObject, httpAgent, implicit = false) {\n        this.httpAgent = httpAgent;\n        this.implicit = implicit;\n        const serviceAccount = (typeof serviceAccountPathOrObject === 'string') ?\n            ServiceAccount.fromPath(serviceAccountPathOrObject)\n            : new ServiceAccount(serviceAccountPathOrObject);\n        this.projectId = serviceAccount.projectId;\n        this.privateKey = serviceAccount.privateKey;\n        this.clientEmail = serviceAccount.clientEmail;\n        this.httpClient = new api_request_1.HttpClient();\n    }\n    getAccessToken() {\n        const token = this.createAuthJwt_();\n        const postData = 'grant_type=urn%3Aietf%3Aparams%3Aoauth%3A' +\n            'grant-type%3Ajwt-bearer&assertion=' + token;\n        const request = {\n            method: 'POST',\n            url: `https://${GOOGLE_AUTH_TOKEN_HOST}${GOOGLE_AUTH_TOKEN_PATH}`,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            data: postData,\n            httpAgent: this.httpAgent,\n        };\n        return requestAccessToken(this.httpClient, request);\n    }\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    createAuthJwt_() {\n        const claims = {\n            scope: [\n                'https://www.googleapis.com/auth/cloud-platform',\n                'https://www.googleapis.com/auth/firebase.database',\n                'https://www.googleapis.com/auth/firebase.messaging',\n                'https://www.googleapis.com/auth/identitytoolkit',\n                'https://www.googleapis.com/auth/userinfo.email',\n            ].join(' '),\n        };\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const jwt = require('jsonwebtoken');\n        // This method is actually synchronous so we can capture and return the buffer.\n        return jwt.sign(claims, this.privateKey, {\n            audience: GOOGLE_TOKEN_AUDIENCE,\n            expiresIn: ONE_HOUR_IN_SECONDS,\n            issuer: this.clientEmail,\n            algorithm: JWT_ALGORITHM,\n        });\n    }\n}\nexports.ServiceAccountCredential = ServiceAccountCredential;\n/**\n * A struct containing the properties necessary to use service account JSON credentials.\n */\nclass ServiceAccount {\n    static fromPath(filePath) {\n        try {\n            return new ServiceAccount(JSON.parse(fs.readFileSync(filePath, 'utf8')));\n        }\n        catch (error) {\n            // Throw a nicely formed error message if the file contents cannot be parsed\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Failed to parse service account json file: ' + error);\n        }\n    }\n    constructor(json) {\n        if (!util.isNonNullObject(json)) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Service account must be an object.');\n        }\n        copyAttr(this, json, 'projectId', 'project_id');\n        copyAttr(this, json, 'privateKey', 'private_key');\n        copyAttr(this, json, 'clientEmail', 'client_email');\n        let errorMessage;\n        if (!util.isNonEmptyString(this.projectId)) {\n            errorMessage = 'Service account object must contain a string \"project_id\" property.';\n        }\n        else if (!util.isNonEmptyString(this.privateKey)) {\n            errorMessage = 'Service account object must contain a string \"private_key\" property.';\n        }\n        else if (!util.isNonEmptyString(this.clientEmail)) {\n            errorMessage = 'Service account object must contain a string \"client_email\" property.';\n        }\n        if (typeof errorMessage !== 'undefined') {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, errorMessage);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const forge = require('node-forge');\n        try {\n            forge.pki.privateKeyFromPem(this.privateKey);\n        }\n        catch (error) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Failed to parse private key: ' + error);\n        }\n    }\n}\n/**\n * Implementation of Credential that gets access tokens from the metadata service available\n * in the Google Cloud Platform. This authenticates the process as the default service account\n * of an App Engine instance or Google Compute Engine machine.\n */\nclass ComputeEngineCredential {\n    constructor(httpAgent) {\n        this.httpClient = new api_request_1.HttpClient();\n        this.httpAgent = httpAgent;\n    }\n    getAccessToken() {\n        const request = this.buildRequest(GOOGLE_METADATA_SERVICE_TOKEN_PATH);\n        return requestAccessToken(this.httpClient, request);\n    }\n    /**\n     * getIDToken returns a OIDC token from the compute metadata service\n     * that can be used to make authenticated calls to audience\n     * @param audience the URL the returned ID token will be used to call.\n    */\n    getIDToken(audience) {\n        const request = this.buildRequest(`${GOOGLE_METADATA_SERVICE_IDENTITY_PATH}?audience=${audience}`);\n        return requestIDToken(this.httpClient, request);\n    }\n    getProjectId() {\n        if (this.projectId) {\n            return Promise.resolve(this.projectId);\n        }\n        const request = this.buildRequest(GOOGLE_METADATA_SERVICE_PROJECT_ID_PATH);\n        return this.httpClient.send(request)\n            .then((resp) => {\n            this.projectId = resp.text;\n            return this.projectId;\n        })\n            .catch((err) => {\n            const detail = (err instanceof api_request_1.RequestResponseError) ? getDetailFromResponse(err.response) : err.message;\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, `Failed to determine project ID: ${detail}`);\n        });\n    }\n    getServiceAccountEmail() {\n        if (this.accountId) {\n            return Promise.resolve(this.accountId);\n        }\n        const request = this.buildRequest(GOOGLE_METADATA_SERVICE_ACCOUNT_ID_PATH);\n        return this.httpClient.send(request)\n            .then((resp) => {\n            this.accountId = resp.text;\n            return this.accountId;\n        })\n            .catch((err) => {\n            const detail = (err instanceof api_request_1.RequestResponseError) ? getDetailFromResponse(err.response) : err.message;\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, `Failed to determine service account email: ${detail}`);\n        });\n    }\n    buildRequest(urlPath) {\n        return {\n            method: 'GET',\n            url: `http://${GOOGLE_METADATA_SERVICE_HOST}${urlPath}`,\n            headers: {\n                'Metadata-Flavor': 'Google',\n            },\n            httpAgent: this.httpAgent,\n        };\n    }\n}\nexports.ComputeEngineCredential = ComputeEngineCredential;\n/**\n * Implementation of Credential that gets access tokens from refresh tokens.\n */\nclass RefreshTokenCredential {\n    /**\n     * Creates a new RefreshTokenCredential from the given parameters.\n     *\n     * @param refreshTokenPathOrObject - Refresh token json object or path to a refresh token\n     *   (user credentials) json file.\n     * @param httpAgent - Optional http.Agent to use when calling the remote token server.\n     * @param implicit - An optinal boolean indicating whether this credential was implicitly\n     *   discovered from the environment, as opposed to being explicitly specified by the developer.\n     *\n     * @constructor\n     */\n    constructor(refreshTokenPathOrObject, httpAgent, implicit = false) {\n        this.httpAgent = httpAgent;\n        this.implicit = implicit;\n        this.refreshToken = (typeof refreshTokenPathOrObject === 'string') ?\n            RefreshToken.fromPath(refreshTokenPathOrObject)\n            : new RefreshToken(refreshTokenPathOrObject);\n        this.httpClient = new api_request_1.HttpClient();\n    }\n    getAccessToken() {\n        const postData = 'client_id=' + this.refreshToken.clientId + '&' +\n            'client_secret=' + this.refreshToken.clientSecret + '&' +\n            'refresh_token=' + this.refreshToken.refreshToken + '&' +\n            'grant_type=refresh_token';\n        const request = {\n            method: 'POST',\n            url: `https://${REFRESH_TOKEN_HOST}${REFRESH_TOKEN_PATH}`,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            data: postData,\n            httpAgent: this.httpAgent,\n        };\n        return requestAccessToken(this.httpClient, request);\n    }\n}\nexports.RefreshTokenCredential = RefreshTokenCredential;\nclass RefreshToken {\n    /*\n     * Tries to load a RefreshToken from a path. Throws if the path doesn't exist or the\n     * data at the path is invalid.\n     */\n    static fromPath(filePath) {\n        try {\n            return new RefreshToken(JSON.parse(fs.readFileSync(filePath, 'utf8')));\n        }\n        catch (error) {\n            // Throw a nicely formed error message if the file contents cannot be parsed\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Failed to parse refresh token file: ' + error);\n        }\n    }\n    constructor(json) {\n        copyAttr(this, json, 'clientId', 'client_id');\n        copyAttr(this, json, 'clientSecret', 'client_secret');\n        copyAttr(this, json, 'refreshToken', 'refresh_token');\n        copyAttr(this, json, 'type', 'type');\n        let errorMessage;\n        if (!util.isNonEmptyString(this.clientId)) {\n            errorMessage = 'Refresh token must contain a \"client_id\" property.';\n        }\n        else if (!util.isNonEmptyString(this.clientSecret)) {\n            errorMessage = 'Refresh token must contain a \"client_secret\" property.';\n        }\n        else if (!util.isNonEmptyString(this.refreshToken)) {\n            errorMessage = 'Refresh token must contain a \"refresh_token\" property.';\n        }\n        else if (!util.isNonEmptyString(this.type)) {\n            errorMessage = 'Refresh token must contain a \"type\" property.';\n        }\n        if (typeof errorMessage !== 'undefined') {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, errorMessage);\n        }\n    }\n}\n/**\n * Implementation of Credential that uses impersonated service account.\n */\nclass ImpersonatedServiceAccountCredential {\n    /**\n     * Creates a new ImpersonatedServiceAccountCredential from the given parameters.\n     *\n     * @param impersonatedServiceAccountPathOrObject - Impersonated Service account json object or\n     * path to a service account json file.\n     * @param httpAgent - Optional http.Agent to use when calling the remote token server.\n     * @param implicit - An optional boolean indicating whether this credential was implicitly\n     *   discovered from the environment, as opposed to being explicitly specified by the developer.\n     *\n     * @constructor\n     */\n    constructor(impersonatedServiceAccountPathOrObject, httpAgent, implicit = false) {\n        this.httpAgent = httpAgent;\n        this.implicit = implicit;\n        this.impersonatedServiceAccount = (typeof impersonatedServiceAccountPathOrObject === 'string') ?\n            ImpersonatedServiceAccount.fromPath(impersonatedServiceAccountPathOrObject)\n            : new ImpersonatedServiceAccount(impersonatedServiceAccountPathOrObject);\n        this.httpClient = new api_request_1.HttpClient();\n    }\n    getAccessToken() {\n        const postData = 'client_id=' + this.impersonatedServiceAccount.clientId + '&' +\n            'client_secret=' + this.impersonatedServiceAccount.clientSecret + '&' +\n            'refresh_token=' + this.impersonatedServiceAccount.refreshToken + '&' +\n            'grant_type=refresh_token';\n        const request = {\n            method: 'POST',\n            url: `https://${REFRESH_TOKEN_HOST}${REFRESH_TOKEN_PATH}`,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            data: postData,\n            httpAgent: this.httpAgent,\n        };\n        return requestAccessToken(this.httpClient, request);\n    }\n}\nexports.ImpersonatedServiceAccountCredential = ImpersonatedServiceAccountCredential;\n/**\n * A struct containing the properties necessary to use impersonated service account JSON credentials.\n */\nclass ImpersonatedServiceAccount {\n    /*\n     * Tries to load a ImpersonatedServiceAccount from a path. Throws if the path doesn't exist or the\n     * data at the path is invalid.\n     */\n    static fromPath(filePath) {\n        try {\n            return new ImpersonatedServiceAccount(JSON.parse(fs.readFileSync(filePath, 'utf8')));\n        }\n        catch (error) {\n            // Throw a nicely formed error message if the file contents cannot be parsed\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Failed to parse impersonated service account file: ' + error);\n        }\n    }\n    constructor(json) {\n        const sourceCredentials = json['source_credentials'];\n        if (sourceCredentials) {\n            copyAttr(this, sourceCredentials, 'clientId', 'client_id');\n            copyAttr(this, sourceCredentials, 'clientSecret', 'client_secret');\n            copyAttr(this, sourceCredentials, 'refreshToken', 'refresh_token');\n            copyAttr(this, sourceCredentials, 'type', 'type');\n        }\n        let errorMessage;\n        if (!util.isNonEmptyString(this.clientId)) {\n            errorMessage = 'Impersonated Service Account must contain a \"source_credentials.client_id\" property.';\n        }\n        else if (!util.isNonEmptyString(this.clientSecret)) {\n            errorMessage = 'Impersonated Service Account must contain a \"source_credentials.client_secret\" property.';\n        }\n        else if (!util.isNonEmptyString(this.refreshToken)) {\n            errorMessage = 'Impersonated Service Account must contain a \"source_credentials.refresh_token\" property.';\n        }\n        else if (!util.isNonEmptyString(this.type)) {\n            errorMessage = 'Impersonated Service Account must contain a \"source_credentials.type\" property.';\n        }\n        if (typeof errorMessage !== 'undefined') {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, errorMessage);\n        }\n    }\n}\n/**\n * Checks if the given credential was loaded via the application default credentials mechanism. This\n * includes all ComputeEngineCredential instances, and the ServiceAccountCredential and RefreshTokenCredential\n * instances that were loaded from well-known files or environment variables, rather than being explicitly\n * instantiated.\n *\n * @param credential - The credential instance to check.\n */\nfunction isApplicationDefault(credential) {\n    return credential instanceof ComputeEngineCredential ||\n        (credential instanceof ServiceAccountCredential && credential.implicit) ||\n        (credential instanceof RefreshTokenCredential && credential.implicit) ||\n        (credential instanceof ImpersonatedServiceAccountCredential && credential.implicit);\n}\nexports.isApplicationDefault = isApplicationDefault;\nfunction getApplicationDefault(httpAgent) {\n    if (process.env.GOOGLE_APPLICATION_CREDENTIALS) {\n        return credentialFromFile(process.env.GOOGLE_APPLICATION_CREDENTIALS, httpAgent, false);\n    }\n    // It is OK to not have this file. If it is present, it must be valid.\n    if (GCLOUD_CREDENTIAL_PATH) {\n        const credential = credentialFromFile(GCLOUD_CREDENTIAL_PATH, httpAgent, true);\n        if (credential)\n            return credential;\n    }\n    return new ComputeEngineCredential(httpAgent);\n}\nexports.getApplicationDefault = getApplicationDefault;\n/**\n * Copies the specified property from one object to another.\n *\n * If no property exists by the given \"key\", looks for a property identified by \"alt\", and copies it instead.\n * This can be used to implement behaviors such as \"copy property myKey or my_key\".\n *\n * @param to - Target object to copy the property into.\n * @param from - Source object to copy the property from.\n * @param key - Name of the property to copy.\n * @param alt - Alternative name of the property to copy.\n */\nfunction copyAttr(to, from, key, alt) {\n    const tmp = from[key] || from[alt];\n    if (typeof tmp !== 'undefined') {\n        to[key] = tmp;\n    }\n}\n/**\n * Obtain a new OAuth2 token by making a remote service call.\n */\nfunction requestAccessToken(client, request) {\n    return client.send(request).then((resp) => {\n        const json = resp.data;\n        if (!json.access_token || !json.expires_in) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, `Unexpected response while fetching access token: ${JSON.stringify(json)}`);\n        }\n        return json;\n    }).catch((err) => {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, getErrorMessage(err));\n    });\n}\n/**\n * Obtain a new OIDC token by making a remote service call.\n */\nfunction requestIDToken(client, request) {\n    return client.send(request).then((resp) => {\n        if (!resp.text) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Unexpected response while fetching id token: response.text is undefined');\n        }\n        return resp.text;\n    }).catch((err) => {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, getErrorMessage(err));\n    });\n}\n/**\n * Constructs a human-readable error message from the given Error.\n */\nfunction getErrorMessage(err) {\n    const detail = (err instanceof api_request_1.RequestResponseError) ? getDetailFromResponse(err.response) : err.message;\n    return `Error fetching access token: ${detail}`;\n}\n/**\n * Extracts details from the given HTTP error response, and returns a human-readable description. If\n * the response is JSON-formatted, looks up the error and error_description fields sent by the\n * Google Auth servers. Otherwise returns the entire response payload as the error detail.\n */\nfunction getDetailFromResponse(response) {\n    if (response.isJson() && response.data.error) {\n        const json = response.data;\n        let detail = json.error;\n        if (json.error_description) {\n            detail += ' (' + json.error_description + ')';\n        }\n        return detail;\n    }\n    return response.text || 'Missing error payload';\n}\nfunction credentialFromFile(filePath, httpAgent, ignoreMissing) {\n    const credentialsFile = readCredentialFile(filePath, ignoreMissing);\n    if (typeof credentialsFile !== 'object' || credentialsFile === null) {\n        if (ignoreMissing) {\n            return null;\n        }\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Failed to parse contents of the credentials file as an object');\n    }\n    if (credentialsFile.type === 'service_account') {\n        return new ServiceAccountCredential(credentialsFile, httpAgent, true);\n    }\n    if (credentialsFile.type === 'authorized_user') {\n        return new RefreshTokenCredential(credentialsFile, httpAgent, true);\n    }\n    if (credentialsFile.type === 'impersonated_service_account') {\n        return new ImpersonatedServiceAccountCredential(credentialsFile, httpAgent, true);\n    }\n    throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Invalid contents in the credentials file');\n}\nfunction readCredentialFile(filePath, ignoreMissing) {\n    let fileText;\n    try {\n        fileText = fs.readFileSync(filePath, 'utf8');\n    }\n    catch (error) {\n        if (ignoreMissing) {\n            return null;\n        }\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, `Failed to read credentials from file ${filePath}: ` + error);\n    }\n    try {\n        return JSON.parse(fileText);\n    }\n    catch (error) {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, 'Failed to parse contents of the credentials file as an object: ' + error);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2842, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/utils/index.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseResourceName = exports.transformMillisecondsToSecondsString = exports.generateUpdateMask = exports.formatString = exports.toWebSafeBase64 = exports.findServiceAccountEmail = exports.getExplicitServiceAccountEmail = exports.findProjectId = exports.getExplicitProjectId = exports.addReadonlyGetter = exports.renameProperties = exports.getSdkVersion = void 0;\nconst credential_internal_1 = require(\"../app/credential-internal\");\nconst validator = require(\"./validator\");\nlet sdkVersion;\n// TODO: Move to firebase-admin/app as an internal member.\nfunction getSdkVersion() {\n    if (!sdkVersion) {\n        const { version } = require('../../package.json'); // eslint-disable-line @typescript-eslint/no-var-requires\n        sdkVersion = version;\n    }\n    return sdkVersion;\n}\nexports.getSdkVersion = getSdkVersion;\n/**\n * Renames properties on an object given a mapping from old to new property names.\n *\n * For example, this can be used to map underscore_cased properties to camelCase.\n *\n * @param obj - The object whose properties to rename.\n * @param keyMap - The mapping from old to new property names.\n */\nfunction renameProperties(obj, keyMap) {\n    Object.keys(keyMap).forEach((oldKey) => {\n        if (oldKey in obj) {\n            const newKey = keyMap[oldKey];\n            // The old key's value takes precedence over the new key's value.\n            obj[newKey] = obj[oldKey];\n            delete obj[oldKey];\n        }\n    });\n}\nexports.renameProperties = renameProperties;\n/**\n * Defines a new read-only property directly on an object and returns the object.\n *\n * @param obj - The object on which to define the property.\n * @param prop - The name of the property to be defined or modified.\n * @param value - The value associated with the property.\n */\nfunction addReadonlyGetter(obj, prop, value) {\n    Object.defineProperty(obj, prop, {\n        value,\n        // Make this property read-only.\n        writable: false,\n        // Include this property during enumeration of obj's properties.\n        enumerable: true,\n    });\n}\nexports.addReadonlyGetter = addReadonlyGetter;\n/**\n * Returns the Google Cloud project ID associated with a Firebase app, if it's explicitly\n * specified in either the Firebase app options, credentials or the local environment.\n * Otherwise returns null.\n *\n * @param app - A Firebase app to get the project ID from.\n *\n * @returns A project ID string or null.\n */\nfunction getExplicitProjectId(app) {\n    const options = app.options;\n    if (validator.isNonEmptyString(options.projectId)) {\n        return options.projectId;\n    }\n    const credential = app.options.credential;\n    if (credential instanceof credential_internal_1.ServiceAccountCredential) {\n        return credential.projectId;\n    }\n    const projectId = process.env.GOOGLE_CLOUD_PROJECT || process.env.GCLOUD_PROJECT;\n    if (validator.isNonEmptyString(projectId)) {\n        return projectId;\n    }\n    return null;\n}\nexports.getExplicitProjectId = getExplicitProjectId;\n/**\n * Determines the Google Cloud project ID associated with a Firebase app. This method\n * first checks if a project ID is explicitly specified in either the Firebase app options,\n * credentials or the local environment in that order. If no explicit project ID is\n * configured, but the SDK has been initialized with ComputeEngineCredentials, this\n * method attempts to discover the project ID from the local metadata service.\n *\n * @param app - A Firebase app to get the project ID from.\n *\n * @returns A project ID string or null.\n */\nfunction findProjectId(app) {\n    const projectId = getExplicitProjectId(app);\n    if (projectId) {\n        return Promise.resolve(projectId);\n    }\n    const credential = app.options.credential;\n    if (credential instanceof credential_internal_1.ComputeEngineCredential) {\n        return credential.getProjectId();\n    }\n    return Promise.resolve(null);\n}\nexports.findProjectId = findProjectId;\n/**\n * Returns the service account email associated with a Firebase app, if it's explicitly\n * specified in either the Firebase app options, credentials or the local environment.\n * Otherwise returns null.\n *\n * @param app - A Firebase app to get the service account email from.\n *\n * @returns A service account email string or null.\n */\nfunction getExplicitServiceAccountEmail(app) {\n    const options = app.options;\n    if (validator.isNonEmptyString(options.serviceAccountId)) {\n        return options.serviceAccountId;\n    }\n    const credential = app.options.credential;\n    if (credential instanceof credential_internal_1.ServiceAccountCredential) {\n        return credential.clientEmail;\n    }\n    return null;\n}\nexports.getExplicitServiceAccountEmail = getExplicitServiceAccountEmail;\n/**\n * Determines the service account email associated with a Firebase app. This method first\n * checks if a service account email is explicitly specified in either the Firebase app options,\n * credentials or the local environment in that order. If no explicit service account email is\n * configured, but the SDK has been initialized with ComputeEngineCredentials, this\n * method attempts to discover the service account email from the local metadata service.\n *\n * @param app - A Firebase app to get the service account email from.\n *\n * @returns A service account email ID string or null.\n */\nfunction findServiceAccountEmail(app) {\n    const accountId = getExplicitServiceAccountEmail(app);\n    if (accountId) {\n        return Promise.resolve(accountId);\n    }\n    const credential = app.options.credential;\n    if (credential instanceof credential_internal_1.ComputeEngineCredential) {\n        return credential.getServiceAccountEmail();\n    }\n    return Promise.resolve(null);\n}\nexports.findServiceAccountEmail = findServiceAccountEmail;\n/**\n * Encodes data using web-safe-base64.\n *\n * @param data - The raw data byte input.\n * @returns The base64-encoded result.\n */\nfunction toWebSafeBase64(data) {\n    return data.toString('base64').replace(/\\//g, '_').replace(/\\+/g, '-');\n}\nexports.toWebSafeBase64 = toWebSafeBase64;\n/**\n * Formats a string of form 'project/{projectId}/{api}' and replaces\n * with corresponding arguments {projectId: '1234', api: 'resource'}\n * and returns output: 'project/1234/resource'.\n *\n * @param str - The original string where the param need to be\n *     replaced.\n * @param params - The optional parameters to replace in the\n *     string.\n * @returns The resulting formatted string.\n */\nfunction formatString(str, params) {\n    let formatted = str;\n    Object.keys(params || {}).forEach((key) => {\n        formatted = formatted.replace(new RegExp('{' + key + '}', 'g'), params[key]);\n    });\n    return formatted;\n}\nexports.formatString = formatString;\n/**\n * Generates the update mask for the provided object.\n * Note this will ignore the last key with value undefined.\n *\n * @param obj - The object to generate the update mask for.\n * @param terminalPaths - The optional map of keys for maximum paths to traverse.\n *      Nested objects beyond that path will be ignored. This is useful for\n *      keys with variable object values.\n * @param root - The path so far.\n * @returns The computed update mask list.\n */\nfunction generateUpdateMask(obj, terminalPaths = [], root = '') {\n    const updateMask = [];\n    if (!validator.isNonNullObject(obj)) {\n        return updateMask;\n    }\n    for (const key in obj) {\n        if (typeof obj[key] !== 'undefined') {\n            const nextPath = root ? `${root}.${key}` : key;\n            // We hit maximum path.\n            // Consider switching to Set<string> if the list grows too large.\n            if (terminalPaths.indexOf(nextPath) !== -1) {\n                // Add key and stop traversing this branch.\n                updateMask.push(key);\n            }\n            else {\n                const maskList = generateUpdateMask(obj[key], terminalPaths, nextPath);\n                if (maskList.length > 0) {\n                    maskList.forEach((mask) => {\n                        updateMask.push(`${key}.${mask}`);\n                    });\n                }\n                else {\n                    updateMask.push(key);\n                }\n            }\n        }\n    }\n    return updateMask;\n}\nexports.generateUpdateMask = generateUpdateMask;\n/**\n * Transforms milliseconds to a protobuf Duration type string.\n * Returns the duration in seconds with up to nine fractional\n * digits, terminated by 's'. Example: \"3 seconds 0 nano seconds as 3s,\n * 3 seconds 1 nano seconds as 3.000000001s\".\n *\n * @param milliseconds - The duration in milliseconds.\n * @returns The resulting formatted string in seconds with up to nine fractional\n * digits, terminated by 's'.\n */\nfunction transformMillisecondsToSecondsString(milliseconds) {\n    let duration;\n    const seconds = Math.floor(milliseconds / 1000);\n    const nanos = Math.floor((milliseconds - seconds * 1000) * 1000000);\n    if (nanos > 0) {\n        let nanoString = nanos.toString();\n        while (nanoString.length < 9) {\n            nanoString = '0' + nanoString;\n        }\n        duration = `${seconds}.${nanoString}s`;\n    }\n    else {\n        duration = `${seconds}s`;\n    }\n    return duration;\n}\nexports.transformMillisecondsToSecondsString = transformMillisecondsToSecondsString;\n/**\n * Parses the top level resources of a given resource name.\n * Supports both full and partial resources names, example:\n * `locations/{location}/functions/{functionName}`,\n * `projects/{project}/locations/{location}/functions/{functionName}`, or {functionName}\n * Does not support deeply nested resource names.\n *\n * @param resourceName - The resource name string.\n * @param resourceIdKey - The key of the resource name to be parsed.\n * @returns A parsed resource name object.\n */\nfunction parseResourceName(resourceName, resourceIdKey) {\n    if (!resourceName.includes('/')) {\n        return { resourceId: resourceName };\n    }\n    const CHANNEL_NAME_REGEX = new RegExp(`^(projects/([^/]+)/)?locations/([^/]+)/${resourceIdKey}/([^/]+)$`);\n    const match = CHANNEL_NAME_REGEX.exec(resourceName);\n    if (match === null) {\n        throw new Error('Invalid resource name format.');\n    }\n    const projectId = match[2];\n    const locationId = match[3];\n    const resourceId = match[4];\n    return { projectId, locationId, resourceId };\n}\nexports.parseResourceName = parseResourceName;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3122, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/app/firebase-app.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FirebaseApp = exports.FirebaseAppInternals = void 0;\nconst credential_internal_1 = require(\"./credential-internal\");\nconst validator = require(\"../utils/validator\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst error_1 = require(\"../utils/error\");\nconst TOKEN_EXPIRY_THRESHOLD_MILLIS = 5 * 60 * 1000;\n/**\n * Internals of a FirebaseApp instance.\n */\nclass FirebaseAppInternals {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    constructor(credential_) {\n        this.credential_ = credential_;\n        this.tokenListeners_ = [];\n        this.isRefreshing = false;\n    }\n    getToken(forceRefresh = false) {\n        if (forceRefresh || this.shouldRefresh()) {\n            this.promiseToCachedToken_ = this.refreshToken();\n        }\n        return this.promiseToCachedToken_;\n    }\n    getCachedToken() {\n        return this.cachedToken_ || null;\n    }\n    refreshToken() {\n        this.isRefreshing = true;\n        return Promise.resolve(this.credential_.getAccessToken())\n            .then((result) => {\n            // Since the developer can provide the credential implementation, we want to weakly verify\n            // the return type until the type is properly exported.\n            if (!validator.isNonNullObject(result) ||\n                typeof result.expires_in !== 'number' ||\n                typeof result.access_token !== 'string') {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, `Invalid access token generated: \"${JSON.stringify(result)}\". Valid access ` +\n                    'tokens must be an object with the \"expires_in\" (number) and \"access_token\" ' +\n                    '(string) properties.');\n            }\n            const token = {\n                accessToken: result.access_token,\n                expirationTime: Date.now() + (result.expires_in * 1000),\n            };\n            if (!this.cachedToken_\n                || this.cachedToken_.accessToken !== token.accessToken\n                || this.cachedToken_.expirationTime !== token.expirationTime) {\n                // Update the cache before firing listeners. Listeners may directly query the\n                // cached token state.\n                this.cachedToken_ = token;\n                this.tokenListeners_.forEach((listener) => {\n                    listener(token.accessToken);\n                });\n            }\n            return token;\n        })\n            .catch((error) => {\n            let errorMessage = (typeof error === 'string') ? error : error.message;\n            errorMessage = 'Credential implementation provided to initializeApp() via the ' +\n                '\"credential\" property failed to fetch a valid Google OAuth2 access token with the ' +\n                `following error: \"${errorMessage}\".`;\n            if (errorMessage.indexOf('invalid_grant') !== -1) {\n                errorMessage += ' There are two likely causes: (1) your server time is not properly ' +\n                    'synced or (2) your certificate key file has been revoked. To solve (1), re-sync the ' +\n                    'time on your server. To solve (2), make sure the key ID for your key file is still ' +\n                    'present at https://console.firebase.google.com/iam-admin/serviceaccounts/project. If ' +\n                    'not, generate a new key file at ' +\n                    'https://console.firebase.google.com/project/_/settings/serviceaccounts/adminsdk.';\n            }\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, errorMessage);\n        })\n            .finally(() => {\n            this.isRefreshing = false;\n        });\n    }\n    shouldRefresh() {\n        return (!this.cachedToken_ || (this.cachedToken_.expirationTime - Date.now()) <= TOKEN_EXPIRY_THRESHOLD_MILLIS)\n            && !this.isRefreshing;\n    }\n    /**\n     * Adds a listener that is called each time a token changes.\n     *\n     * @param listener - The listener that will be called with each new token.\n     */\n    addAuthTokenListener(listener) {\n        this.tokenListeners_.push(listener);\n        if (this.cachedToken_) {\n            listener(this.cachedToken_.accessToken);\n        }\n    }\n    /**\n     * Removes a token listener.\n     *\n     * @param listener - The listener to remove.\n     */\n    removeAuthTokenListener(listener) {\n        this.tokenListeners_ = this.tokenListeners_.filter((other) => other !== listener);\n    }\n}\nexports.FirebaseAppInternals = FirebaseAppInternals;\n/**\n * Global context object for a collection of services using a shared authentication state.\n *\n * @internal\n */\nclass FirebaseApp {\n    constructor(options, name, appStore) {\n        this.appStore = appStore;\n        this.services_ = {};\n        this.isDeleted_ = false;\n        this.name_ = name;\n        this.options_ = (0, deep_copy_1.deepCopy)(options);\n        if (!validator.isNonNullObject(this.options_)) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_OPTIONS, 'Invalid Firebase app options passed as the first argument to initializeApp() for the ' +\n                `app named \"${this.name_}\". Options must be a non-null object.`);\n        }\n        const hasCredential = ('credential' in this.options_);\n        if (!hasCredential) {\n            this.options_.credential = (0, credential_internal_1.getApplicationDefault)(this.options_.httpAgent);\n        }\n        const credential = this.options_.credential;\n        if (typeof credential !== 'object' || credential === null || typeof credential.getAccessToken !== 'function') {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_OPTIONS, 'Invalid Firebase app options passed as the first argument to initializeApp() for the ' +\n                `app named \"${this.name_}\". The \"credential\" property must be an object which implements ` +\n                'the Credential interface.');\n        }\n        this.INTERNAL = new FirebaseAppInternals(credential);\n    }\n    /**\n     * Returns the name of the FirebaseApp instance.\n     *\n     * @returns The name of the FirebaseApp instance.\n     */\n    get name() {\n        this.checkDestroyed_();\n        return this.name_;\n    }\n    /**\n     * Returns the options for the FirebaseApp instance.\n     *\n     * @returns The options for the FirebaseApp instance.\n     */\n    get options() {\n        this.checkDestroyed_();\n        return (0, deep_copy_1.deepCopy)(this.options_);\n    }\n    /**\n     * @internal\n     */\n    getOrInitService(name, init) {\n        return this.ensureService_(name, () => init(this));\n    }\n    /**\n     * Deletes the FirebaseApp instance.\n     *\n     * @returns An empty Promise fulfilled once the FirebaseApp instance is deleted.\n     */\n    delete() {\n        this.checkDestroyed_();\n        // Also remove the instance from the AppStore. This is needed to support the existing\n        // app.delete() use case. In the future we can remove this API, and deleteApp() will\n        // become the only way to tear down an App.\n        this.appStore?.removeApp(this.name);\n        return Promise.all(Object.keys(this.services_).map((serviceName) => {\n            const service = this.services_[serviceName];\n            if (isStateful(service)) {\n                return service.delete();\n            }\n            return Promise.resolve();\n        })).then(() => {\n            this.services_ = {};\n            this.isDeleted_ = true;\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    ensureService_(serviceName, initializer) {\n        this.checkDestroyed_();\n        if (!(serviceName in this.services_)) {\n            this.services_[serviceName] = initializer();\n        }\n        return this.services_[serviceName];\n    }\n    /**\n     * Throws an Error if the FirebaseApp instance has already been deleted.\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    checkDestroyed_() {\n        if (this.isDeleted_) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.APP_DELETED, `Firebase app named \"${this.name_}\" has already been deleted.`);\n        }\n    }\n}\nexports.FirebaseApp = FirebaseApp;\nfunction isStateful(service) {\n    return typeof service.delete === 'function';\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3311, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/app/lifecycle.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FIREBASE_CONFIG_VAR = exports.deleteApp = exports.getApps = exports.getApp = exports.initializeApp = exports.defaultAppStore = exports.AppStore = void 0;\nconst fs = require(\"fs\");\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\nconst credential_internal_1 = require(\"./credential-internal\");\nconst firebase_app_1 = require(\"./firebase-app\");\nconst DEFAULT_APP_NAME = '[DEFAULT]';\nclass AppStore {\n    constructor() {\n        this.appStore = new Map();\n    }\n    initializeApp(options, appName = DEFAULT_APP_NAME) {\n        if (typeof options === 'undefined') {\n            options = loadOptionsFromEnvVar();\n            options.credential = (0, credential_internal_1.getApplicationDefault)();\n        }\n        if (typeof appName !== 'string' || appName === '') {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_NAME, `Invalid Firebase app name \"${appName}\" provided. App name must be a non-empty string.`);\n        }\n        else if (this.appStore.has(appName)) {\n            if (appName === DEFAULT_APP_NAME) {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.DUPLICATE_APP, 'The default Firebase app already exists. This means you called initializeApp() ' +\n                    'more than once without providing an app name as the second argument. In most cases ' +\n                    'you only need to call initializeApp() once. But if you do want to initialize ' +\n                    'multiple apps, pass a second argument to initializeApp() to give each app a unique ' +\n                    'name.');\n            }\n            else {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.DUPLICATE_APP, `Firebase app named \"${appName}\" already exists. This means you called initializeApp() ` +\n                    'more than once with the same app name as the second argument. Make sure you provide a ' +\n                    'unique name every time you call initializeApp().');\n            }\n        }\n        const app = new firebase_app_1.FirebaseApp(options, appName, this);\n        this.appStore.set(app.name, app);\n        return app;\n    }\n    getApp(appName = DEFAULT_APP_NAME) {\n        if (typeof appName !== 'string' || appName === '') {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_NAME, `Invalid Firebase app name \"${appName}\" provided. App name must be a non-empty string.`);\n        }\n        else if (!this.appStore.has(appName)) {\n            let errorMessage = (appName === DEFAULT_APP_NAME)\n                ? 'The default Firebase app does not exist. ' : `Firebase app named \"${appName}\" does not exist. `;\n            errorMessage += 'Make sure you call initializeApp() before using any of the Firebase services.';\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.NO_APP, errorMessage);\n        }\n        return this.appStore.get(appName);\n    }\n    getApps() {\n        // Return a copy so the caller cannot mutate the array\n        return Array.from(this.appStore.values());\n    }\n    deleteApp(app) {\n        if (typeof app !== 'object' || app === null || !('options' in app)) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_ARGUMENT, 'Invalid app argument.');\n        }\n        // Make sure the given app already exists.\n        const existingApp = getApp(app.name);\n        // Delegate delete operation to the App instance itself. That will also remove the App\n        // instance from the AppStore.\n        return existingApp.delete();\n    }\n    clearAllApps() {\n        const promises = [];\n        this.getApps().forEach((app) => {\n            promises.push(this.deleteApp(app));\n        });\n        return Promise.all(promises).then();\n    }\n    /**\n     * Removes the specified App instance from the store. This is currently called by the\n     * {@link FirebaseApp.delete} method. Can be removed once the app deletion is handled\n     * entirely by the {@link deleteApp} top-level function.\n     */\n    removeApp(appName) {\n        this.appStore.delete(appName);\n    }\n}\nexports.AppStore = AppStore;\nexports.defaultAppStore = new AppStore();\nfunction initializeApp(options, appName = DEFAULT_APP_NAME) {\n    return exports.defaultAppStore.initializeApp(options, appName);\n}\nexports.initializeApp = initializeApp;\nfunction getApp(appName = DEFAULT_APP_NAME) {\n    return exports.defaultAppStore.getApp(appName);\n}\nexports.getApp = getApp;\nfunction getApps() {\n    return exports.defaultAppStore.getApps();\n}\nexports.getApps = getApps;\n/**\n * Renders this given `App` unusable and frees the resources of\n * all associated services (though it does *not* clean up any backend\n * resources). When running the SDK locally, this method\n * must be called to ensure graceful termination of the process.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n */\nfunction deleteApp(app) {\n    return exports.defaultAppStore.deleteApp(app);\n}\nexports.deleteApp = deleteApp;\n/**\n * Constant holding the environment variable name with the default config.\n * If the environment variable contains a string that starts with '{' it will be parsed as JSON,\n * otherwise it will be assumed to be pointing to a file.\n */\nexports.FIREBASE_CONFIG_VAR = 'FIREBASE_CONFIG';\n/**\n * Parse the file pointed to by the FIREBASE_CONFIG_VAR, if it exists.\n * Or if the FIREBASE_CONFIG_ENV contains a valid JSON object, parse it directly.\n * If the environment variable contains a string that starts with '{' it will be parsed as JSON,\n * otherwise it will be assumed to be pointing to a file.\n */\nfunction loadOptionsFromEnvVar() {\n    const config = process.env[exports.FIREBASE_CONFIG_VAR];\n    if (!validator.isNonEmptyString(config)) {\n        return {};\n    }\n    try {\n        const contents = config.startsWith('{') ? config : fs.readFileSync(config, 'utf8');\n        return JSON.parse(contents);\n    }\n    catch (error) {\n        // Throw a nicely formed error message if the file contents cannot be parsed\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_OPTIONS, 'Failed to parse app options file: ' + error);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3460, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/app/credential-factory.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearGlobalAppDefaultCred = exports.refreshToken = exports.cert = exports.applicationDefault = void 0;\nconst credential_internal_1 = require(\"./credential-internal\");\nlet globalAppDefaultCred;\nconst globalCertCreds = {};\nconst globalRefreshTokenCreds = {};\n/**\n * Returns a credential created from the\n * {@link https://developers.google.com/identity/protocols/application-default-credentials |\n * Google Application Default Credentials}\n * that grants admin access to Firebase services. This credential can be used\n * in the call to {@link firebase-admin.app#initializeApp}.\n *\n * Google Application Default Credentials are available on any Google\n * infrastructure, such as Google App Engine and Google Compute Engine.\n *\n * See\n * {@link https://firebase.google.com/docs/admin/setup#initialize_the_sdk | Initialize the SDK}\n * for more details.\n *\n * @example\n * ```javascript\n * initializeApp({\n *   credential: applicationDefault(),\n *   databaseURL: \"https://<DATABASE_NAME>.firebaseio.com\"\n * });\n * ```\n *\n * @param httpAgent - Optional {@link https://nodejs.org/api/http.html#http_class_http_agent | HTTP Agent}\n *   to be used when retrieving access tokens from Google token servers.\n *\n * @returns A credential authenticated via Google\n *   Application Default Credentials that can be used to initialize an app.\n */\nfunction applicationDefault(httpAgent) {\n    if (typeof globalAppDefaultCred === 'undefined') {\n        globalAppDefaultCred = (0, credential_internal_1.getApplicationDefault)(httpAgent);\n    }\n    return globalAppDefaultCred;\n}\nexports.applicationDefault = applicationDefault;\n/**\n * Returns a credential created from the provided service account that grants\n * admin access to Firebase services. This credential can be used in the call\n * to {@link firebase-admin.app#initializeApp}.\n *\n * See\n * {@link https://firebase.google.com/docs/admin/setup#initialize_the_sdk | Initialize the SDK}\n * for more details.\n *\n * @example\n * ```javascript\n * // Providing a path to a service account key JSON file\n * const serviceAccount = require(\"path/to/serviceAccountKey.json\");\n * initializeApp({\n *   credential: cert(serviceAccount),\n *   databaseURL: \"https://<DATABASE_NAME>.firebaseio.com\"\n * });\n * ```\n *\n * @example\n * ```javascript\n * // Providing a service account object inline\n * initializeApp({\n *   credential: cert({\n *     projectId: \"<PROJECT_ID>\",\n *     clientEmail: \"foo@<PROJECT_ID>.iam.gserviceaccount.com\",\n *     privateKey: \"-----BEGIN PRIVATE KEY-----<KEY>-----END PRIVATE KEY-----\\n\"\n *   }),\n *   databaseURL: \"https://<DATABASE_NAME>.firebaseio.com\"\n * });\n * ```\n *\n * @param serviceAccountPathOrObject - The path to a service\n *   account key JSON file or an object representing a service account key.\n * @param httpAgent - Optional {@link https://nodejs.org/api/http.html#http_class_http_agent | HTTP Agent}\n *   to be used when retrieving access tokens from Google token servers.\n *\n * @returns A credential authenticated via the\n *   provided service account that can be used to initialize an app.\n */\nfunction cert(serviceAccountPathOrObject, httpAgent) {\n    const stringifiedServiceAccount = JSON.stringify(serviceAccountPathOrObject);\n    if (!(stringifiedServiceAccount in globalCertCreds)) {\n        globalCertCreds[stringifiedServiceAccount] = new credential_internal_1.ServiceAccountCredential(serviceAccountPathOrObject, httpAgent);\n    }\n    return globalCertCreds[stringifiedServiceAccount];\n}\nexports.cert = cert;\n/**\n * Returns a credential created from the provided refresh token that grants\n * admin access to Firebase services. This credential can be used in the call\n * to {@link firebase-admin.app#initializeApp}.\n *\n * See\n * {@link https://firebase.google.com/docs/admin/setup#initialize_the_sdk | Initialize the SDK}\n * for more details.\n *\n * @example\n * ```javascript\n * // Providing a path to a refresh token JSON file\n * const refreshToken = require(\"path/to/refreshToken.json\");\n * initializeApp({\n *   credential: refreshToken(refreshToken),\n *   databaseURL: \"https://<DATABASE_NAME>.firebaseio.com\"\n * });\n * ```\n *\n * @param refreshTokenPathOrObject - The path to a Google\n *   OAuth2 refresh token JSON file or an object representing a Google OAuth2\n *   refresh token.\n * @param httpAgent - Optional {@link https://nodejs.org/api/http.html#http_class_http_agent | HTTP Agent}\n *   to be used when retrieving access tokens from Google token servers.\n *\n * @returns A credential authenticated via the\n *   provided service account that can be used to initialize an app.\n */\nfunction refreshToken(refreshTokenPathOrObject, httpAgent) {\n    const stringifiedRefreshToken = JSON.stringify(refreshTokenPathOrObject);\n    if (!(stringifiedRefreshToken in globalRefreshTokenCreds)) {\n        globalRefreshTokenCreds[stringifiedRefreshToken] = new credential_internal_1.RefreshTokenCredential(refreshTokenPathOrObject, httpAgent);\n    }\n    return globalRefreshTokenCreds[stringifiedRefreshToken];\n}\nexports.refreshToken = refreshToken;\n/**\n * Clears the global ADC cache. Exported for testing.\n */\nfunction clearGlobalAppDefaultCred() {\n    globalAppDefaultCred = undefined;\n}\nexports.clearGlobalAppDefaultCred = clearGlobalAppDefaultCred;\n"],"names":[],"mappings":"AAAA,2BAA2B,GAC3B;AACA;;;;;;;;;;;;;;;CAeC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,yBAAyB,GAAG,QAAQ,YAAY,GAAG,QAAQ,IAAI,GAAG,QAAQ,kBAAkB,GAAG,KAAK;AAC5G,MAAM;AACN,IAAI;AACJ,MAAM,kBAAkB,CAAC;AACzB,MAAM,0BAA0B,CAAC;AACjC;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2BC,GACD,SAAS,mBAAmB,SAAS;IACjC,IAAI,OAAO,yBAAyB,aAAa;QAC7C,uBAAuB,CAAC,GAAG,sBAAsB,qBAAqB,EAAE;IAC5E;IACA,OAAO;AACX;AACA,QAAQ,kBAAkB,GAAG;AAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuCC,GACD,SAAS,KAAK,0BAA0B,EAAE,SAAS;IAC/C,MAAM,4BAA4B,KAAK,SAAS,CAAC;IACjD,IAAI,CAAC,CAAC,6BAA6B,eAAe,GAAG;QACjD,eAAe,CAAC,0BAA0B,GAAG,IAAI,sBAAsB,wBAAwB,CAAC,4BAA4B;IAChI;IACA,OAAO,eAAe,CAAC,0BAA0B;AACrD;AACA,QAAQ,IAAI,GAAG;AACf;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2BC,GACD,SAAS,aAAa,wBAAwB,EAAE,SAAS;IACrD,MAAM,0BAA0B,KAAK,SAAS,CAAC;IAC/C,IAAI,CAAC,CAAC,2BAA2B,uBAAuB,GAAG;QACvD,uBAAuB,CAAC,wBAAwB,GAAG,IAAI,sBAAsB,sBAAsB,CAAC,0BAA0B;IAClI;IACA,OAAO,uBAAuB,CAAC,wBAAwB;AAC3D;AACA,QAAQ,YAAY,GAAG;AACvB;;CAEC,GACD,SAAS;IACL,uBAAuB;AAC3B;AACA,QAAQ,yBAAyB,GAAG","ignoreList":[0]}},
    {"offset": {"line": 3611, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/app/index.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SDK_VERSION = exports.AppErrorCodes = exports.FirebaseAppError = exports.refreshToken = exports.cert = exports.applicationDefault = exports.deleteApp = exports.getApps = exports.getApp = exports.initializeApp = void 0;\nconst utils_1 = require(\"../utils\");\nvar lifecycle_1 = require(\"./lifecycle\");\nObject.defineProperty(exports, \"initializeApp\", { enumerable: true, get: function () { return lifecycle_1.initializeApp; } });\nObject.defineProperty(exports, \"getApp\", { enumerable: true, get: function () { return lifecycle_1.getApp; } });\nObject.defineProperty(exports, \"getApps\", { enumerable: true, get: function () { return lifecycle_1.getApps; } });\nObject.defineProperty(exports, \"deleteApp\", { enumerable: true, get: function () { return lifecycle_1.deleteApp; } });\nvar credential_factory_1 = require(\"./credential-factory\");\nObject.defineProperty(exports, \"applicationDefault\", { enumerable: true, get: function () { return credential_factory_1.applicationDefault; } });\nObject.defineProperty(exports, \"cert\", { enumerable: true, get: function () { return credential_factory_1.cert; } });\nObject.defineProperty(exports, \"refreshToken\", { enumerable: true, get: function () { return credential_factory_1.refreshToken; } });\nvar error_1 = require(\"../utils/error\");\nObject.defineProperty(exports, \"FirebaseAppError\", { enumerable: true, get: function () { return error_1.FirebaseAppError; } });\nObject.defineProperty(exports, \"AppErrorCodes\", { enumerable: true, get: function () { return error_1.AppErrorCodes; } });\nexports.SDK_VERSION = (0, utils_1.getSdkVersion)();\n"],"names":[],"mappings":"AAAA,2BAA2B,GAC3B;AACA;;;;;;;;;;;;;;;CAeC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,WAAW,GAAG,QAAQ,aAAa,GAAG,QAAQ,gBAAgB,GAAG,QAAQ,YAAY,GAAG,QAAQ,IAAI,GAAG,QAAQ,kBAAkB,GAAG,QAAQ,SAAS,GAAG,QAAQ,OAAO,GAAG,QAAQ,MAAM,GAAG,QAAQ,aAAa,GAAG,KAAK;AAChO,MAAM;AACN,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,iBAAiB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,YAAY,aAAa;IAAE;AAAE;AAC3H,OAAO,cAAc,CAAC,SAAS,UAAU;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,YAAY,MAAM;IAAE;AAAE;AAC7G,OAAO,cAAc,CAAC,SAAS,WAAW;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,YAAY,OAAO;IAAE;AAAE;AAC/G,OAAO,cAAc,CAAC,SAAS,aAAa;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,YAAY,SAAS;IAAE;AAAE;AACnH,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,sBAAsB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,qBAAqB,kBAAkB;IAAE;AAAE;AAC9I,OAAO,cAAc,CAAC,SAAS,QAAQ;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,qBAAqB,IAAI;IAAE;AAAE;AAClH,OAAO,cAAc,CAAC,SAAS,gBAAgB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,qBAAqB,YAAY;IAAE;AAAE;AAClI,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,oBAAoB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,QAAQ,gBAAgB;IAAE;AAAE;AAC7H,OAAO,cAAc,CAAC,SAAS,iBAAiB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,QAAQ,aAAa;IAAE;AAAE;AACvH,QAAQ,WAAW,GAAG,CAAC,GAAG,QAAQ,aAAa","ignoreList":[0]}},
    {"offset": {"line": 3696, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/esm/app/index.js"],"sourcesContent":["import mod from \"../../app/index.js\";\n\nexport const AppErrorCodes = mod.AppErrorCodes;\nexport const FirebaseAppError = mod.FirebaseAppError;\nexport const SDK_VERSION = mod.SDK_VERSION;\nexport const applicationDefault = mod.applicationDefault;\nexport const cert = mod.cert;\nexport const deleteApp = mod.deleteApp;\nexport const getApp = mod.getApp;\nexport const getApps = mod.getApps;\nexport const initializeApp = mod.initializeApp;\nexport const refreshToken = mod.refreshToken;\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAEO,MAAM,gBAAgB,gKAAA,CAAA,UAAG,CAAC,aAAa;AACvC,MAAM,mBAAmB,gKAAA,CAAA,UAAG,CAAC,gBAAgB;AAC7C,MAAM,cAAc,gKAAA,CAAA,UAAG,CAAC,WAAW;AACnC,MAAM,qBAAqB,gKAAA,CAAA,UAAG,CAAC,kBAAkB;AACjD,MAAM,OAAO,gKAAA,CAAA,UAAG,CAAC,IAAI;AACrB,MAAM,YAAY,gKAAA,CAAA,UAAG,CAAC,SAAS;AAC/B,MAAM,SAAS,gKAAA,CAAA,UAAG,CAAC,MAAM;AACzB,MAAM,UAAU,gKAAA,CAAA,UAAG,CAAC,OAAO;AAC3B,MAAM,gBAAgB,gKAAA,CAAA,UAAG,CAAC,aAAa;AACvC,MAAM,eAAe,gKAAA,CAAA,UAAG,CAAC,YAAY","ignoreList":[0]}},
    {"offset": {"line": 3725, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/firestore/firestore-internal.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFirestoreOptions = exports.FirestoreService = void 0;\nconst error_1 = require(\"../utils/error\");\nconst credential_internal_1 = require(\"../app/credential-internal\");\nconst validator = require(\"../utils/validator\");\nconst utils = require(\"../utils/index\");\nclass FirestoreService {\n    constructor(app) {\n        this.databases = new Map();\n        this.firestoreSettings = new Map();\n        this.appInternal = app;\n    }\n    initializeDatabase(databaseId, settings) {\n        const existingInstance = this.databases.get(databaseId);\n        if (existingInstance) {\n            const initialSettings = this.firestoreSettings.get(databaseId) ?? {};\n            if (this.checkIfSameSettings(settings, initialSettings)) {\n                return existingInstance;\n            }\n            throw new error_1.FirebaseFirestoreError({\n                code: 'failed-precondition',\n                message: 'initializeFirestore() has already been called with ' +\n                    'different options. To avoid this error, call initializeFirestore() with the ' +\n                    'same options as when it was originally called, or call getFirestore() to return the' +\n                    ' already initialized instance.'\n            });\n        }\n        const newInstance = initFirestore(this.app, databaseId, settings);\n        this.databases.set(databaseId, newInstance);\n        this.firestoreSettings.set(databaseId, settings);\n        return newInstance;\n    }\n    getDatabase(databaseId) {\n        let database = this.databases.get(databaseId);\n        if (database === undefined) {\n            database = initFirestore(this.app, databaseId, {});\n            this.databases.set(databaseId, database);\n            this.firestoreSettings.set(databaseId, {});\n        }\n        return database;\n    }\n    checkIfSameSettings(settingsA, settingsB) {\n        const a = settingsA ?? {};\n        const b = settingsB ?? {};\n        // If we start passing more settings to Firestore constructor,\n        // replace this with deep equality check.\n        return (a.preferRest === b.preferRest);\n    }\n    /**\n     * Returns the app associated with this Storage instance.\n     *\n     * @returns The app associated with this Storage instance.\n     */\n    get app() {\n        return this.appInternal;\n    }\n}\nexports.FirestoreService = FirestoreService;\nfunction getFirestoreOptions(app, firestoreSettings) {\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n        throw new error_1.FirebaseFirestoreError({\n            code: 'invalid-argument',\n            message: 'First argument passed to admin.firestore() must be a valid Firebase app instance.',\n        });\n    }\n    const projectId = utils.getExplicitProjectId(app);\n    const credential = app.options.credential;\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { version: firebaseVersion } = require('../../package.json');\n    const preferRest = firestoreSettings?.preferRest;\n    if (credential instanceof credential_internal_1.ServiceAccountCredential) {\n        return {\n            credentials: {\n                private_key: credential.privateKey,\n                client_email: credential.clientEmail,\n            },\n            // When the SDK is initialized with ServiceAccountCredentials an explicit projectId is\n            // guaranteed to be available.\n            projectId: projectId,\n            firebaseVersion,\n            preferRest,\n        };\n    }\n    else if ((0, credential_internal_1.isApplicationDefault)(app.options.credential)) {\n        // Try to use the Google application default credentials.\n        // If an explicit project ID is not available, let Firestore client discover one from the\n        // environment. This prevents the users from having to set GOOGLE_CLOUD_PROJECT in GCP runtimes.\n        return validator.isNonEmptyString(projectId)\n            ? { projectId, firebaseVersion, preferRest }\n            : { firebaseVersion, preferRest };\n    }\n    throw new error_1.FirebaseFirestoreError({\n        code: 'invalid-credential',\n        message: 'Failed to initialize Google Cloud Firestore client with the available credentials. ' +\n            'Must initialize the SDK with a certificate credential or application default credentials ' +\n            'to use Cloud Firestore API.',\n    });\n}\nexports.getFirestoreOptions = getFirestoreOptions;\nfunction initFirestore(app, databaseId, firestoreSettings) {\n    const options = getFirestoreOptions(app, firestoreSettings);\n    options.databaseId = databaseId;\n    let firestoreDatabase;\n    try {\n        // Lazy-load the Firestore implementation here, which in turns loads gRPC.\n        firestoreDatabase = require('@google-cloud/firestore').Firestore;\n    }\n    catch (err) {\n        throw new error_1.FirebaseFirestoreError({\n            code: 'missing-dependencies',\n            message: 'Failed to import the Cloud Firestore client library for Node.js. '\n                + 'Make sure to install the \"@google-cloud/firestore\" npm package. '\n                + `Original error: ${err}`,\n        });\n    }\n    return new firestoreDatabase(options);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3860, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/firestore/index.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FirebaseFirestoreError = exports.initializeFirestore = exports.getFirestore = exports.setLogFunction = exports.v1 = exports.WriteResult = exports.WriteBatch = exports.Transaction = exports.Timestamp = exports.QuerySnapshot = exports.QueryPartition = exports.QueryDocumentSnapshot = exports.Query = exports.GrpcStatus = exports.GeoPoint = exports.Firestore = exports.Filter = exports.FieldValue = exports.FieldPath = exports.DocumentSnapshot = exports.DocumentReference = exports.CollectionReference = exports.CollectionGroup = exports.BundleBuilder = exports.BulkWriter = exports.AggregateQuerySnapshot = exports.AggregateQuery = exports.AggregateField = void 0;\nconst app_1 = require(\"../app\");\nconst firestore_internal_1 = require(\"./firestore-internal\");\nconst path_1 = require(\"@google-cloud/firestore/build/src/path\");\nvar firestore_1 = require(\"@google-cloud/firestore\");\nObject.defineProperty(exports, \"AggregateField\", { enumerable: true, get: function () { return firestore_1.AggregateField; } });\nObject.defineProperty(exports, \"AggregateQuery\", { enumerable: true, get: function () { return firestore_1.AggregateQuery; } });\nObject.defineProperty(exports, \"AggregateQuerySnapshot\", { enumerable: true, get: function () { return firestore_1.AggregateQuerySnapshot; } });\nObject.defineProperty(exports, \"BulkWriter\", { enumerable: true, get: function () { return firestore_1.BulkWriter; } });\nObject.defineProperty(exports, \"BundleBuilder\", { enumerable: true, get: function () { return firestore_1.BundleBuilder; } });\nObject.defineProperty(exports, \"CollectionGroup\", { enumerable: true, get: function () { return firestore_1.CollectionGroup; } });\nObject.defineProperty(exports, \"CollectionReference\", { enumerable: true, get: function () { return firestore_1.CollectionReference; } });\nObject.defineProperty(exports, \"DocumentReference\", { enumerable: true, get: function () { return firestore_1.DocumentReference; } });\nObject.defineProperty(exports, \"DocumentSnapshot\", { enumerable: true, get: function () { return firestore_1.DocumentSnapshot; } });\nObject.defineProperty(exports, \"FieldPath\", { enumerable: true, get: function () { return firestore_1.FieldPath; } });\nObject.defineProperty(exports, \"FieldValue\", { enumerable: true, get: function () { return firestore_1.FieldValue; } });\nObject.defineProperty(exports, \"Filter\", { enumerable: true, get: function () { return firestore_1.Filter; } });\nObject.defineProperty(exports, \"Firestore\", { enumerable: true, get: function () { return firestore_1.Firestore; } });\nObject.defineProperty(exports, \"GeoPoint\", { enumerable: true, get: function () { return firestore_1.GeoPoint; } });\nObject.defineProperty(exports, \"GrpcStatus\", { enumerable: true, get: function () { return firestore_1.GrpcStatus; } });\nObject.defineProperty(exports, \"Query\", { enumerable: true, get: function () { return firestore_1.Query; } });\nObject.defineProperty(exports, \"QueryDocumentSnapshot\", { enumerable: true, get: function () { return firestore_1.QueryDocumentSnapshot; } });\nObject.defineProperty(exports, \"QueryPartition\", { enumerable: true, get: function () { return firestore_1.QueryPartition; } });\nObject.defineProperty(exports, \"QuerySnapshot\", { enumerable: true, get: function () { return firestore_1.QuerySnapshot; } });\nObject.defineProperty(exports, \"Timestamp\", { enumerable: true, get: function () { return firestore_1.Timestamp; } });\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return firestore_1.Transaction; } });\nObject.defineProperty(exports, \"WriteBatch\", { enumerable: true, get: function () { return firestore_1.WriteBatch; } });\nObject.defineProperty(exports, \"WriteResult\", { enumerable: true, get: function () { return firestore_1.WriteResult; } });\nObject.defineProperty(exports, \"v1\", { enumerable: true, get: function () { return firestore_1.v1; } });\nObject.defineProperty(exports, \"setLogFunction\", { enumerable: true, get: function () { return firestore_1.setLogFunction; } });\nfunction getFirestore(appOrDatabaseId, optionalDatabaseId) {\n    const app = typeof appOrDatabaseId === 'object' ? appOrDatabaseId : (0, app_1.getApp)();\n    const databaseId = (typeof appOrDatabaseId === 'string' ? appOrDatabaseId : optionalDatabaseId) || path_1.DEFAULT_DATABASE_ID;\n    const firebaseApp = app;\n    const firestoreService = firebaseApp.getOrInitService('firestore', (app) => new firestore_internal_1.FirestoreService(app));\n    return firestoreService.getDatabase(databaseId);\n}\nexports.getFirestore = getFirestore;\nfunction initializeFirestore(app, settings, databaseId) {\n    settings ?? (settings = {});\n    databaseId ?? (databaseId = path_1.DEFAULT_DATABASE_ID);\n    const firebaseApp = app;\n    const firestoreService = firebaseApp.getOrInitService('firestore', (app) => new firestore_internal_1.FirestoreService(app));\n    return firestoreService.initializeDatabase(databaseId, settings);\n}\nexports.initializeFirestore = initializeFirestore;\nvar error_1 = require(\"../utils/error\");\nObject.defineProperty(exports, \"FirebaseFirestoreError\", { enumerable: true, get: function () { return error_1.FirebaseFirestoreError; } });\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4062, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/firebase-admin/lib/esm/firestore/index.js"],"sourcesContent":["import mod from \"../../firestore/index.js\";\n\nexport const AggregateField = mod.AggregateField;\nexport const AggregateQuery = mod.AggregateQuery;\nexport const AggregateQuerySnapshot = mod.AggregateQuerySnapshot;\nexport const BulkWriter = mod.BulkWriter;\nexport const BundleBuilder = mod.BundleBuilder;\nexport const CollectionGroup = mod.CollectionGroup;\nexport const CollectionReference = mod.CollectionReference;\nexport const DocumentReference = mod.DocumentReference;\nexport const DocumentSnapshot = mod.DocumentSnapshot;\nexport const FieldPath = mod.FieldPath;\nexport const FieldValue = mod.FieldValue;\nexport const Filter = mod.Filter;\nexport const FirebaseFirestoreError = mod.FirebaseFirestoreError;\nexport const Firestore = mod.Firestore;\nexport const GeoPoint = mod.GeoPoint;\nexport const GrpcStatus = mod.GrpcStatus;\nexport const Query = mod.Query;\nexport const QueryDocumentSnapshot = mod.QueryDocumentSnapshot;\nexport const QueryPartition = mod.QueryPartition;\nexport const QuerySnapshot = mod.QuerySnapshot;\nexport const Timestamp = mod.Timestamp;\nexport const Transaction = mod.Transaction;\nexport const WriteBatch = mod.WriteBatch;\nexport const WriteResult = mod.WriteResult;\nexport const getFirestore = mod.getFirestore;\nexport const initializeFirestore = mod.initializeFirestore;\nexport const setLogFunction = mod.setLogFunction;\nexport const v1 = mod.v1;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEO,MAAM,iBAAiB,sKAAA,CAAA,UAAG,CAAC,cAAc;AACzC,MAAM,iBAAiB,sKAAA,CAAA,UAAG,CAAC,cAAc;AACzC,MAAM,yBAAyB,sKAAA,CAAA,UAAG,CAAC,sBAAsB;AACzD,MAAM,aAAa,sKAAA,CAAA,UAAG,CAAC,UAAU;AACjC,MAAM,gBAAgB,sKAAA,CAAA,UAAG,CAAC,aAAa;AACvC,MAAM,kBAAkB,sKAAA,CAAA,UAAG,CAAC,eAAe;AAC3C,MAAM,sBAAsB,sKAAA,CAAA,UAAG,CAAC,mBAAmB;AACnD,MAAM,oBAAoB,sKAAA,CAAA,UAAG,CAAC,iBAAiB;AAC/C,MAAM,mBAAmB,sKAAA,CAAA,UAAG,CAAC,gBAAgB;AAC7C,MAAM,YAAY,sKAAA,CAAA,UAAG,CAAC,SAAS;AAC/B,MAAM,aAAa,sKAAA,CAAA,UAAG,CAAC,UAAU;AACjC,MAAM,SAAS,sKAAA,CAAA,UAAG,CAAC,MAAM;AACzB,MAAM,yBAAyB,sKAAA,CAAA,UAAG,CAAC,sBAAsB;AACzD,MAAM,YAAY,sKAAA,CAAA,UAAG,CAAC,SAAS;AAC/B,MAAM,WAAW,sKAAA,CAAA,UAAG,CAAC,QAAQ;AAC7B,MAAM,aAAa,sKAAA,CAAA,UAAG,CAAC,UAAU;AACjC,MAAM,QAAQ,sKAAA,CAAA,UAAG,CAAC,KAAK;AACvB,MAAM,wBAAwB,sKAAA,CAAA,UAAG,CAAC,qBAAqB;AACvD,MAAM,iBAAiB,sKAAA,CAAA,UAAG,CAAC,cAAc;AACzC,MAAM,gBAAgB,sKAAA,CAAA,UAAG,CAAC,aAAa;AACvC,MAAM,YAAY,sKAAA,CAAA,UAAG,CAAC,SAAS;AAC/B,MAAM,cAAc,sKAAA,CAAA,UAAG,CAAC,WAAW;AACnC,MAAM,aAAa,sKAAA,CAAA,UAAG,CAAC,UAAU;AACjC,MAAM,cAAc,sKAAA,CAAA,UAAG,CAAC,WAAW;AACnC,MAAM,eAAe,sKAAA,CAAA,UAAG,CAAC,YAAY;AACrC,MAAM,sBAAsB,sKAAA,CAAA,UAAG,CAAC,mBAAmB;AACnD,MAAM,iBAAiB,sKAAA,CAAA,UAAG,CAAC,cAAc;AACzC,MAAM,KAAK,sKAAA,CAAA,UAAG,CAAC,EAAE","ignoreList":[0]}}]
}